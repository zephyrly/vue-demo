{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组中部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ // 找到所有能修改原数组的方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reserve',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    // 重写数组方法\r\n    newArrayProto[method] = function(...args){\r\n        //push.call(arr)\r\n\r\n        const result = oldArrayProto[method].call(this,...args) // 函数调用原来的方法, 函数的劫持，切片编程\r\n        let inserted;\r\n        let ob = this.__ob__ // 拿到data上的设置的__ob__属性(实例)\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args; // arr.splice(0,1,3)\r\n                break\r\n            case 'splice': // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2)\r\n            default: \r\n                break\r\n        }\r\n        console.log('inserted====>',inserted) // 新增insert\r\n        if(inserted){\r\n            // 对新增的内容再次进行观察\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        console.log('method',method)\r\n        return result\r\n    }\r\n})","// observe.js\r\nimport {newArrayProto} from './array'\r\nclass Observe{\r\n    constructor(data){\r\n        // Object.defineProperties只能劫持已存在的属性,($set等方案修复)\r\n        //data.__ob__ = this; // 将data的this实例挂在到data的__ob__属性上\r\n\r\n        // 实现数组的新增数据的劫持功能（see: ./array.js）,并且标识已被观测\r\n        // 防止对象循环属性 __ob__ 进入死循环,我们需要将 __ob__ 设置不可枚举\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        \r\n        if(Array.isArray(data)){\r\n            // 重写数组方法 7个变异方法 进行数组本身的修改\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data){ // 循环遍历，对象属性依次劫持\r\n        // Object.defineProperty  重新定义属性， 性能差\r\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\r\n    }\r\n\r\n    observeArray(data) { // 观测数组\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target,key,value){ //闭包\r\n    observe(value) // 对data下的所有对象进行劫持\r\n    Object.defineProperty(target,key,{\r\n        get(){\r\n            console.log('用户取值了',key)\r\n            return value\r\n        },\r\n        set(newVal){``\r\n            console.log('用户设置值了')\r\n            if(newVal === value) return\r\n            observe(newVal)\r\n            value = newVal\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data){\r\n\r\n    //对这个对象进行劫持\r\n    if( typeof data !== 'object' || data === null){\r\n        return // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observe){\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要在被进行劫持()\r\n\r\n    return new Observe(data);\r\n}","// state.js\r\nimport { observe } from './observe/index'\r\n\r\n\r\nexport function initState(vm){\r\n    const opts = vm.$options; // 获取1options\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[target][key]\r\n        },\r\n        set(newVal){\r\n            vm[target][key] = newVal\r\n        }\r\n    })\r\n}\r\n\r\nexport function initData(vm){\r\n    let data = vm.$options.data; // data是函数或者对象\r\n    typeof data === 'function'? data.call(vm): data\r\n\r\n    vm._data = data\r\n    // 数据劫持\r\n    observe(data)\r\n\r\n    for(let key in data){\r\n        proxy(vm, '_data', key)\r\n    }\r\n}","// compiler\r\n\r\n//1.将template转化为ast树\r\n//2.生成render(render方法执行后，返回虚拟dom)\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 开始标签<xxx>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 结束标签</xxx>\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性\r\n\r\nconst regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// vue3采用不是正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {    // 解析一个删除一个，直到全部解析完成\r\n\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []  // 用于存放元素\r\n    let currentParent    // 指向栈中的最后一个\r\n    let root\r\n    function createASTElememt(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        let node = createASTElememt(tag, attrs)    // 创建一个ast节点\r\n        if (!root) {  // 判断是否为空树\r\n            root = node     // 如果为空，则当前的树为根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node     // currentParent为栈中的最后一个\r\n    }\r\n    function chars(text) {      // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end() {\r\n        let node = stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {    // 获取开始标签\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],   //标签名\r\n                attrs: []                // 属性\r\n            }\r\n            advance(start[0].length)\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {   // 匹配属性\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5]})\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false  // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 如果textEnd == 0 说明是开始标签或者结束标签\r\n        // 如果textEnd > 0 说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag()   // 开始标签的匹配结果\r\n            if (startTagMatch) {  // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)    // 解析到的文本\r\n            }\r\n           \r\n        }\r\n    }\r\n    return root\r\n}\r\n","import { parseHTML } from \"./parse\"\r\n\r\nfunction genProps(attrs){\r\n    let str = '' //{namee,,value}\r\n    for(let i = 0;i<attrs.length;i++) {\r\n        let attr = attrs[i]\r\n\r\n        if(attr.name === 'style'){\r\n            // color:red;bacckground:red => {color:red}\r\n            let obj = {}\r\n\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj\r\n        }\r\n\r\n        str+=`${attr.name}:${JSON.stringify(attr.value)}`  // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0,-1)}}` // a:b,c:d\r\n}\r\n\r\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;  //加了/g需要每次exec重置一下,每次匹配他会向后靠一位，导致匹配不到\r\n\r\nfunction gen(node){\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        //文本\r\n        console.log(node)\r\n        let text = node.text\r\n        if(!defaultTagRE.exec(text)){\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = [];\r\n            let match\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)){\r\n\r\n                let index = match.index; // 匹配位置 {{name}} swfrwqe  {{abc}}\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n                }\r\n\r\n                console.log(index,'39')\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n\r\n            return `_v(${tokens.join('+')})`\r\n        } \r\n    }\r\n}\r\n\r\nfunction genChildren(children){\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast){\r\n    let children = genChildren(ast.children)\r\n    let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs): 'null' }\r\n    ${\r\n        ast.children.length?`,${children}`:''\r\n    })`\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // 将template转换成ast树\r\n    let ast = parseHTML(template)\r\n\r\n    //生成render方法(render方法执行后返回虚拟DOM)\r\n    console.log(ast)\r\n\r\n    ast = codegen(ast);\r\n    console.log(ast)\r\n    // render(){\r\n    // }\r\n}\r\n","//  initMinix\r\n// init.js\r\nimport { initState } from './state'\r\nimport { compileToFunction } from './compiler/index'\r\n\r\n// 给Vue增加init方法\r\nexport function initMinix(Vue) {\r\n    // 给vue增加init方法\r\n    Vue.prototype._init = function (options) {\r\n        // 用于初始化操作\r\n        // vue $options获取用户的配置\r\n\r\n        // 我们使用 vue时 $nextTick $data $attr.....\r\n        const vm = this\r\n        vm.$options = options //将给用户的1选项挂载到实例上\r\n\r\n        //初始化状态\r\n        initState(vm)\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el) // 实现数据挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if (!ops.render) {\r\n            // 先查找是否存在render函数\r\n            let template // 没有render查找是否存在template,没有template采用外部template\r\n            if (!ops.template && el) {\r\n                // 无模板，但存在el\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {\r\n                    template = ops.template // 如果有el, 采用模板内容\r\n                }\r\n            }\r\n\r\n            // 编译template模板\r\n            if (template) {\r\n                const render = compileToFunction(template)\r\n                ops.render = render // jsx最终会编译成h('xxx')\r\n            }\r\n            ops.render\r\n\r\n            // script 标签引用vue.config.js 这个编译过程在浏览器运行\r\n            // runtime是不包含模板编译，整个编译打包时通过loader进行转义vue文件，runtime时不能使用template\r\n        }\r\n    }\r\n}\r\n","// vue\r\nimport { initMinix } from \"./init\"\r\nfunction Vue(options){ // options => 用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMinix(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","console","log","observeArray","Observe","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newVal","_typeof","initState","vm","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElememt","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codegen","exec","tokens","lastIndex","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","initMinix","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}