{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/global-api/index.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// compiler\r\n\r\n//1.将template转化为ast树\r\n//2.生成render(render方法执行后，返回虚拟dom)\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 开始标签<xxx>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 结束标签</xxx>\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性\r\n\r\nconst regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// vue3采用不是正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {    // 解析一个删除一个，直到全部解析完成\r\n\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []  // 用于存放元素\r\n    let currentParent    // 指向栈中的最后一个\r\n    let root\r\n    function createASTElememt(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        let node = createASTElememt(tag, attrs)    // 创建一个ast节点\r\n        if (!root) {  // 判断是否为空树\r\n            root = node     // 如果为空，则当前的树为根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node     // currentParent为栈中的最后一个\r\n    }\r\n    function chars(text) {      // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end() {\r\n        let node = stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {    // 获取开始标签\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],   //标签名\r\n                attrs: []                // 属性\r\n            }\r\n            advance(start[0].length)\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {   // 匹配属性\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5]})\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false  // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 如果textEnd == 0 说明是开始标签或者结束标签\r\n        // 如果textEnd > 0 说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag()   // 开始标签的匹配结果\r\n            if (startTagMatch) {  // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)    // 解析到的文本\r\n            }\r\n           \r\n        }\r\n    }\r\n    return root\r\n}\r\n","import { parseHTML } from \"./parse\"\r\n\r\nfunction genProps(attrs){\r\n    let str = '' //{namee,,value}\r\n    for(let i = 0;i<attrs.length;i++) {\r\n        let attr = attrs[i]\r\n\r\n        if(attr.name === 'style'){\r\n            // color:red;bacckground:red => {color:red}\r\n            let obj = {}\r\n\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj\r\n        }\r\n\r\n        str+=`${attr.name}:${JSON.stringify(attr.value)},`  // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0,-1)}}` // a:b,c:d\r\n}\r\n\r\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;  //加了/g需要每次exec重置一下,每次匹配他会向后靠一位，导致匹配不到\r\n\r\nfunction gen(node){\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        //文本\r\n        let text = node.text\r\n        if(!defaultTagRE.exec(text)){\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = [];\r\n            let match\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)){\r\n\r\n                let index = match.index; // 匹配位置 {{name}} swfrwqe  {{abc}}\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n                }\r\n\r\n                // console.log(index,'39',tokens)\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n\r\n            return `_v(${tokens.join('+')})`\r\n        } \r\n    }\r\n}\r\n\r\nfunction genChildren(children){\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast){\r\n    let children = genChildren(ast.children)\r\n    let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs): 'null' }\r\n    ${\r\n        ast.children.length?`,${children}`:''\r\n    })`\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // 将template转换成ast树\r\n    let ast = parseHTML(template)\r\n\r\n    //生成render方法(render方法执行后返回虚拟DOM)\r\n\r\n    let code = codegen(ast);\r\n    //with(this){\r\n    //     console.log(this.a)\r\n    // }\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code)  //根据代码生成render函数\r\n\r\n    return render\r\n}\r\n","// src/util/index.js\r\n// 定义生命周期\r\nexport const LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed',\r\n]\r\n\r\n// 合并策略\r\nconst strats = {}\r\n\r\n//生命周期合并策略\r\nfunction mergeHook(parentVal, childVal) {\r\n    // 如果有儿子\r\n    if (childVal) {\r\n        if (parentVal) {\r\n            // 合并成一个数组\r\n            return parentVal.concat(childVal)\r\n        } else {\r\n            // 包装成一个数组\r\n            return [childVal]\r\n        }\r\n    } else {\r\n        return parentVal\r\n    }\r\n}\r\n\r\n// 为生命周期添加合并策略\r\nLIFECYCLE_HOOKS.forEach((hook) => {\r\n    strats[hook] = mergeHook\r\n})\r\n\r\n// mixin核心方法\r\nexport function mergeOptions(parent, child) {\r\n    const options = {}\r\n    // 遍历父亲\r\n    for (let k in parent) {\r\n        mergeFiled(k)\r\n    }\r\n    // 父亲没有 儿子有\r\n    for (let k in child) {\r\n        if (!parent.hasOwnProperty(k)) {\r\n            mergeFiled(k)\r\n        }\r\n    }\r\n\r\n    //真正合并字段方法\r\n    function mergeFiled(k) {\r\n        if (strats[k]) {\r\n            options[k] = strats[k](parent[k], child[k])\r\n        } else {\r\n            // 默认策略\r\n            options[k] = child[k] ? child[k] : parent[k]\r\n        }\r\n    }\r\n    return options\r\n}\r\n","import { mergeOptions } from \"../utils\"\r\n\r\n\r\nexport function initGlobalApi(Vue) {\r\n    // 静态方法\r\n    // -----策略模式\r\n    Vue.options = {}\r\n    Vue.mixin = function (mixin) {\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this\r\n    }\r\n}","// 重写数组中部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ // 找到所有能修改原数组的方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reserve',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    // 重写数组方法\r\n    newArrayProto[method] = function(...args){\r\n        //push.call(arr)\r\n\r\n        const result = oldArrayProto[method].call(this,...args) // 函数调用原来的方法, 函数的劫持，切片编程(函数切面)\r\n        let inserted;\r\n        let ob = this.__ob__ // 拿到data上的设置的__ob__属性(实例)\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args; // arr.splice(0,1,3)\r\n                break\r\n            case 'splice': // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2)\r\n            default: \r\n                break\r\n        }\r\n        // console.log('inserted====>',inserted,this) // 新增insert\r\n        if(inserted){\r\n            // 对新增的内容再次进行观察\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        //\r\n        // console.log(ob)\r\n        ob.dep.notify(); // 数组变化通知对应的notify\r\n        // console.log('method',method)\r\n        return result\r\n    }\r\n})","let id = 0;\r\n\r\nclass Dep{\r\n    constructor() {\r\n        this.id = id++; // s属性的dep要收集的watcher\r\n        this.subs = []; // 收集依赖\r\n    }\r\n\r\n    depend(){\r\n        // 如果页面有两个相同属性，会重复添加dep\r\n        Dep.target.addDep(this)\r\n        // this.subs.push()\r\n        // dep 和 watch 是多对多关系，\r\n        // dep对应多个watcher 一个属性可以在多规格组件中使用\r\n        // 一个watcher对应多个dep 一个组件由多个属性组成 \r\n    }\r\n\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n\r\n    notify(){\r\n        this.subs.forEach(watcher => watcher.update()); // 告诉watcher要更新了\r\n    }\r\n}\r\nDep.target = null\r\n\r\nlet stack = []\r\nexport function pushTarget(watcher){\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\n\r\nexport function popTarget(){\r\n    stack.pop();\r\n    Dep.target = stack[stack.length -  1]\r\n}\r\n\r\nexport default Dep","// observe.js\r\nimport {newArrayProto} from './array'\r\nimport Dep from './dep'\r\nclass Observe{\r\n    constructor(data){\r\n\r\n        // 给每个对象都进行收集\r\n        this.dep = new Dep();\r\n\r\n        // Object.defineProperties只能劫持已存在的属性,($set等方案修复)\r\n        //data.__ob__ = this; // 将data的this实例挂在到data的__ob__属性上\r\n\r\n        // 实现数组的新增数据的劫持功能（see: ./array.js）,并且标识已被观测\r\n        // 防止对象循环属性 __ob__ 进入死循环,我们需要将 __ob__ 设置不可枚举\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        \r\n        if(Array.isArray(data)){\r\n            // 重写数组方法 7个变异方法 进行数组本身的修改\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data){ // 循环遍历，对象属性依次劫持\r\n        // Object.defineProperty  重新定义属性， 性能差\r\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\r\n    }\r\n \r\n    observeArray(data) { // 观测数组\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target,key,value){ //闭包\r\n    let childOb = observe(value) // 对data下的所有对象进行劫持 ，， childOb依赖收集\r\n    let dep = new Dep(); // 每个属性都有dep\r\n    Object.defineProperty(target,key,{\r\n        get(){\r\n            if(Dep.target){\r\n                dep.depend()  // 让属性收集器记住当前watcher\r\n                if(childOb){\r\n                    childOb.dep.depend();  //让数组和对象也能实现依赖收集\r\n                    if(Array.isArray(value)){\r\n                        dependArray(value)\r\n                    }\r\n                }\r\n            }\r\n            console.log('用户取值了',key)\r\n            return value\r\n        },\r\n        set(newVal){\r\n            console.log('用户设置值了')\r\n            if(newVal === value) return\r\n            observe(newVal)\r\n            value = newVal\r\n            dep.notify() // 通知watcher进行更新\r\n        }\r\n    })\r\n}\r\n\r\n// 递归收集数组下的数组依赖，进行依赖收集\r\nfunction dependArray(value){\r\n    for(let i  =0; i< value.lenght;i++){\r\n        let current = value[i]\r\n        current.__ob__&&current.__ob__.dep.depend();\r\n        if(Array.isArray(current)){\r\n            dependArray(current)\r\n        }\r\n    }\r\n}\r\n\r\nexport function observe(data){\r\n\r\n    //对这个对象进行劫持\r\n    if( typeof data !== 'object' || data === null){\r\n        return // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observe){\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要在被进行劫持()\r\n\r\n    return new Observe(data);\r\n}","// watch.js\r\nimport Dep, { popTarget, pushTarget } from './dep'\r\n\r\n// 1) 当创建渲染watcher的时候，将当前渲染watcher放到Dep.target上\r\n// 2) 调用 _render() 会取值 走到get上\r\n\r\n// 观察者模式实现自动更新\r\nlet id = 0\r\n\r\n// 不同组件有不同watcher\r\nclass Watcher {\r\n    constructor(vm, exportFn, options, cb) {\r\n        this.id = id++\r\n        this.vm = vm\r\n        this.renderWatcher = options // 是否为渲染WATCHER\r\n\r\n        if (typeof exportFn === 'string') {\r\n            this.getter = function () {\r\n                //用户watcher传过来的可能是一个字符串   类似a.a.a.a.b\r\n                let path = exprOrFn.split('.')\r\n                let obj = vm\r\n                for (let i = 0; i < path.length; i++) {\r\n                    obj = obj[path[i]] //vm.a.a.a.a.b\r\n                }\r\n                return obj\r\n            }\r\n        } else {\r\n            this.getter = exportFn // getter意味调用这个函数可以发生取值\r\n        }\r\n        this.deps = [] // 实现计算属性和部分清理工作\r\n        this.depsId = new Set() // 后续实现计算属性，和部分清理工作\r\n\r\n        this.lazy = options.lazy\r\n        this.dirty = this.lazy // 缓存值\r\n\r\n        this.user = options.user\r\n        this.cb = cb\r\n\r\n        this.value = this.lazy ? undefined : this.get()\r\n    }\r\n\r\n    addDep(dep) {\r\n        // 一个组件 对应多个属性，重复不需要记录\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this) // watcher 已经记住了dep,并且进行去重，此时dep记住了watcher\r\n        }\r\n    }\r\n\r\n    evaluate() {\r\n        this.value = this.get() // 获取过户函数的返回值,标识为脏\r\n        this.dirty = false\r\n    }\r\n\r\n    get() {\r\n        pushTarget(this)\r\n        // Dep.target = this; // 静态属性只有一份\r\n        let value = this.getter.call(this.vm) // 会去vm上取值 vm._update(vm._render) 取值naame,age\r\n        // Dep.target = null; // 渲染完毕后就清空\r\n        popTarget()\r\n        return value\r\n    }\r\n\r\n    depend() {\r\n        let i = this.deps.length\r\n        while (i--) {\r\n            // dep.depends\r\n            this.deps[i].depend() // 让计算属性也收集渲染watcher\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this.lazy) {\r\n            // 如果是计算属性 ,则标记值为脏数据,\r\n            this.dirty = true\r\n        } else {\r\n            queueWatcher(this)\r\n            // this.get() // 重新进行渲染\r\n        }\r\n    }\r\n\r\n    // run() {\r\n    //     let oldValue = this.value;\r\n    //     let newValue = this.get(); // 渲染的时候用的是最新的vm进行渲染\r\n    //     if(this.user){\r\n    //         this.cb.call(this.vm,newValue, oldValue)\r\n    //     }\r\n    // }\r\n\r\n    run() {\r\n        const newVal = this.get() //新值\r\n        const oldVal = this.value //老值\r\n        this.value = newVal //跟着之后  老值就成为了现在的值\r\n        if (this.user) {\r\n            if (newVal !== oldVal || isObject(newVal)) {\r\n                this.cb.call(this.vm, newVal, oldVal)\r\n            }\r\n        } else {\r\n            // 渲染watcher\r\n            // this.cb.call(this.vm, newVal, oldVal)\r\n        }\r\n    }\r\n}\r\n\r\nlet queue = []\r\nlet has = {}\r\nlet pendding = false // 防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0)\r\n    queue = []\r\n    has = {}\r\n    pendding = false\r\n    flushQueue.forEach((q) => q.run()) // 刷新过程中会有新的watcher,重新进入queue\r\n}\r\nfunction queueWatcher(watcher) {\r\n    let id = watcher.id\r\n    if (!has[id]) {\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        // 不管update执行多少次，但最终只执行一轮刷新操作\r\n\r\n        if (!pendding) {\r\n            nextTick(flushSchedulerQueue, 0) // 在主栈js执行完成后，定时器执行数据更新\r\n            pendding = true\r\n        }\r\n    }\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\n\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0)\r\n    waiting = true\r\n    callbacks = []\r\n    cbs.forEach((cb) => cb()) // 按顺序执行\r\n}\r\n// vue中使用优雅降级方式执行nextTick,\r\n// 内部首先使用Promise （ie不兼容），MutationObserver(h5浏览器的api), ie中的setImmediate，setImmediate\r\nlet timerFunc\r\nif (Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks)\r\n    let textNode = document.createTextNode(1)\r\n    observer.observe(textNode, {\r\n        characterData: true,\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\n\r\nexport function nextTick(cb) {\r\n    // 内部，外部执行顺序\r\n    callbacks.push(cb) // 维护nextTick中的callback\r\n    if (!waiting) {\r\n        timerFunc()\r\n        waiting = true\r\n    }\r\n}\r\n\r\n// 给每个属性加上一个dep,目的收集watcher\r\n\r\n// 一个组件中，有很多属性， n个属性对应一个视图， n个dep对应一个watcher\r\n// 1个属性对应多个组件 1个dep对应多个watcher\r\n// 多对多关系\r\n\r\nexport default Watcher\r\n","// state.js\r\nimport { observe } from './observe/index'\r\nimport Dep from './observe/dep'\r\nimport Watcher, { nextTick } from './observe/watcher'\r\n\r\n//  处理new Vue中的值\r\nexport function initState(vm) {\r\n    const opts = vm.$options // 获取options\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newVal) {\r\n            vm[target][key] = newVal\r\n        },\r\n    })\r\n}\r\n\r\nexport function initData(vm) {\r\n    let data = vm.$options.data // data是函数或者对象\r\n    typeof data === 'function' ? data.call(vm) : data\r\n\r\n    vm._data = data\r\n    // 数据劫持\r\n    observe(data)\r\n\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\nexport function initComputed(vm) {\r\n    const computed = vm.$options.computed\r\n    const watchers = (vm._computedWatchers = {}) // 将计算属性watcheer保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n\r\n        // 监听计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n\r\n        // 如果直接new watcher 默认执行fn\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\n\r\nexport function initWatch(vm) {\r\n    const watch = vm.$options.watch\r\n\r\n    for (let key in watch) {\r\n        const handler = watch[key] // 支付串 数组 函数\r\n\r\n        if (Array.isArray(handler)) {\r\n            for (let i = 0; i < handler.length; i++) {\r\n                creatWatcher(vm, key, handler)\r\n            }\r\n        } else {\r\n            creatWatcher(vm, key, handler)\r\n        }\r\n    }\r\n}\r\n\r\nfunction creatWatcher(vm, key, handler) {\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler]\r\n    }\r\n\r\n    return vm.$watch(key, handler)\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n    const setter = userDef.set || (() => {})\r\n\r\n    //  通过实例拿到属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter,\r\n    })\r\n}\r\n\r\n// 计算属性不会收集依赖， 只会让自己的依赖收集依赖\r\nfunction createComputedGetter(key) {\r\n    return function () {\r\n        const watcher = this._computedWatchers[key] // 获取到对应属性watcher\r\n        if (watcher.dirty) {\r\n            watcher.evaluate() // 执行后会在计算属性中，渲染watcher后创建一个计算属性的watcher\r\n        }\r\n        if (Dep.target) {\r\n            // 如果计算属性出栈后 还要渲染watcher 需要将计算属性的watcher 去收集上一层的渲染watcher\r\n            watcher.depend()\r\n        }\r\n        return watcher.value // 返回watcher的值\r\n    }\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    // 绥中转换的都是$watch\r\n    Vue.prototype.$nextTick = nextTick\r\n    Vue.prototype.$watch = function (exportFn, cb, options = {}) {\r\n        new Watcher(this, exportFn, { user: true }, cb)\r\n    }\r\n}\r\n","// vdom index.js\r\nexport function createElementVNode(vm, tag, data = {}, ...children) {\r\n    if(data === null){\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children)\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n\r\n// 与ast的区别，ast做的语法层面的转化,描述的是语法本身（css,js,html）\r\n// vnode 描述的dom元素，可以增加一些自定义属性(js)\r\nfunction vnode(vm, tag, key, data, children,text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        // .......\r\n    }\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2){\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\r\n}\r\n","import { isSameVnode } from '.'\r\n\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode\r\n    if (typeof tag === 'string') {\r\n        //标签\r\n        vnode.el = document.createElement(tag) // 将真实节点与虚拟节点进行对应，后续方便修改属性\r\n        patchProps(vnode.el, {}, data)\r\n        children.forEach((child) => {\r\n            vnode.el.appendChild(createElm(child))\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(JSON.stringify(text))\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n    let oldStyles = oldProps.style || {}\r\n    let newStyles = props.style || {}\r\n\r\n    for (let key in oldStyles) { // 老节点样式有，新的没有，删除\r\n        if (!newStyles[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n\r\n    for (let key in oldProps) { // 老节点属性有\r\n        if (!props[key]) { // 新的属性没有，删除\r\n            el.removeAttribute(key)\r\n        }\r\n    }\r\n\r\n    for (let key in props) { // 新的覆盖老的\r\n        if (key === 'style') {\r\n            // style(color:'red')\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nexport function patch(oldVNode, vnode) {\r\n    // 初渲染流程\r\n    const isRealElement = oldVNode.nodeType\r\n    if (isRealElement) {\r\n        const elm = oldVNode // 获取真实元素\r\n        const parentElm = elm.parentNode // 拿到父元素\r\n        let newElm = createElm(vnode) // 生成真实dom\r\n        parentElm.insertBefore(newElm, elm.nextSibiling)\r\n        parentElm.removeChild(elm) // 删除老节点\r\n        console.log(newElm)\r\n        return newElm\r\n    } else {\r\n        // diff 算法\r\n        patchVnode(oldVNode, vnode)\r\n    }\r\n}\r\n\r\n// diff算法\r\nfunction patchVnode(oldVNode, vnode) {\r\n    \r\n    if (!isSameVnode(oldVNode, vnode)) { // tag === tag  key === key\r\n        // 用老节点的父亲 进行替换\r\n\r\n        let el = createElm(vnode)\r\n        oldVNode.el.parentNode.replaceChild(el, oldVNode.el)\r\n        return el\r\n    }\r\n\r\n    // 文本的情况 文本期望比较文本内容\r\n    let el = vnode.el = oldVNode.el //复用老的文本节点\r\n    if (!oldVNode.tag) {\r\n        // 是文本\r\n        if (oldVNode.text !== vnode.text) {\r\n            el.textContent = vnode.text // 用新的文本覆盖老的\r\n        }\r\n    }\r\n\r\n    // 标签 是标签需要比对标签的属性\r\n    patchProps(el, oldVNode.data, vnode.data)\r\n\r\n    // 比较子节点 一方有，一方无\r\n    \r\n\r\n    let oldChildren = oldVNode.children || {}\r\n    let newChildren = vnode.children || {}\r\n    if(oldChildren.length > 0 && newChildren.length > 0){\r\n        // 完整diff\r\n        updateChildren(el, oldChildren, newChildren)\r\n    } else if(newChildren.length > 0) { // old没有，新的有\r\n        mountChildren(el,newChildren)\r\n    } else if(oldChildren.length > 0) { // old有，新的没有\r\n        el.innerHTML = ''; // 循环删除\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\nfunction mountChildren(el,newChildren){\r\n    for(let i=0; i<newChildren.length; i++){\r\n        let child = newChildren[i];\r\n        el.appendChild(createElm(child))\r\n    }\r\n}\r\n\r\n// function updateChildren(el, oldChildren, newChildren){\r\n//     let oldStartIndex = 0\r\n//     let newStartIndex = 0\r\n\r\n//     let oldEndIndex = oldChildren.length - 1\r\n//     let newEndIndex = newChildren.length - 1\r\n\r\n//     let oldStartVnode = oldChildren[oldEndIndex]\r\n//     let newStartVnode = newChildren[newEndIndex]\r\n\r\n//     while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex){\r\n//         // 双方有一方指针，大于尾部指针则停止循环\r\n//         if(isSameVnode(oldStartVnode,newStartVnode)){\r\n//             patchVnode(oldStartVnode,newStartVnode); // 如果相同节点 则递归比较子节点\r\n//             oldStartVnode = oldChildren[++oldEndIndex]\r\n//             newStartVnode = newChildren[++newEndIndex]\r\n\r\n//             // 比较开头节点\r\n//         }\r\n//     }\r\n//     if(newStartIndex <= newEndIndex){\r\n//         for(let i = newStartIndex; i <= newEndIndex; i++){\r\n//             let childEl = createElm(newChildren[i])\r\n//             el.appendChild(childEl)\r\n//         }\r\n//     }\r\n\r\n// }\r\n\r\n// diff算法核心 采用双指针的方式 对比新老vnode的儿子节点\r\nfunction updateChildren(parent, oldCh, newCh) {\r\n    let oldStartIndex = 0; //老儿子的起始下标\r\n    let oldStartVnode = oldCh[0]; //老儿子的第一个节点\r\n    let oldEndIndex = oldCh.length - 1; //老儿子的结束下标\r\n    let oldEndVnode = oldCh[oldEndIndex]; //老儿子的起结束节点\r\n  \r\n    let newStartIndex = 0; //同上  新儿子的\r\n    let newStartVnode = newCh[0];\r\n    let newEndIndex = newCh.length - 1;\r\n    let newEndVnode = newCh[newEndIndex];\r\n  \r\n    // 根据key来创建老的儿子的index映射表  类似 {'a':0,'b':1} 代表key为'a'的节点在第一个位置 key为'b'的节点在第二个位置\r\n    function makeIndexByKey(children) {\r\n      let map = {};\r\n      children.forEach((item, index) => {\r\n        map[item.key] = index;\r\n      });\r\n      return map;\r\n    }\r\n    // 生成的映射表\r\n    let map = makeIndexByKey(oldCh);\r\n  \r\n    // 只有当新老儿子的双指标的起始位置不大于结束位置的时候  才能循环 一方停止了就需要结束循环\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n      // 因为暴力对比过程把移动的vnode置为 undefined 如果不存在vnode节点 直接跳过\r\n      if (!oldStartVnode) {\r\n        oldStartVnode = oldCh[++oldStartIndex];\r\n      } else if (!oldEndVnode) {\r\n        oldEndVnode = oldCh[--oldEndIndex];\r\n      } else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n        // 头和头对比 依次向后追加\r\n        patch(oldStartVnode, newStartVnode); //递归比较儿子以及他们的子节点\r\n        oldStartVnode = oldCh[++oldStartIndex];\r\n        newStartVnode = newCh[++newStartIndex];\r\n      } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n        //尾和尾对比 依次向前追加\r\n        patch(oldEndVnode, newEndVnode);\r\n        oldEndVnode = oldCh[--oldEndIndex];\r\n        newEndVnode = newCh[--newEndIndex];\r\n      } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n        // 老的头和新的尾相同 把老的头部移动到尾部\r\n        patch(oldStartVnode, newEndVnode);\r\n        parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling); //insertBefore可以移动或者插入真实dom\r\n        oldStartVnode = oldCh[++oldStartIndex];\r\n        newEndVnode = newCh[--newEndIndex];\r\n      } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n        // 老的尾和新的头相同 把老的尾部移动到头部\r\n        patch(oldEndVnode, newStartVnode);\r\n        parent.insertBefore(oldEndVnode.el, oldStartVnode.el);\r\n        oldEndVnode = oldCh[--oldEndIndex];\r\n        newStartVnode = newCh[++newStartIndex];\r\n      } else {\r\n        // 上述四种情况都不满足 那么需要暴力对比\r\n        // 根据老的子节点的key和index的映射表 从新的开始子节点进行查找 如果可以找到就进行移动操作 如果找不到则直接进行插入\r\n        let moveIndex = map[newStartVnode.key];\r\n        if (!moveIndex) {\r\n          // 老的节点找不到  直接插入\r\n          parent.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n        } else {\r\n          let moveVnode = oldCh[moveIndex]; //找得到就拿到老的节点\r\n          oldCh[moveIndex] = undefined; //这个是占位操作 避免数组塌陷  防止老节点移动走了之后破坏了初始的映射表位置\r\n          parent.insertBefore(moveVnode.el, oldStartVnode.el); //把找到的节点移动到最前面\r\n          patch(moveVnode, newStartVnode);\r\n        }\r\n      }\r\n    }\r\n    // 如果老节点循环完毕了 但是新节点还有  证明  新节点需要被添加到头部或者尾部\r\n    if (newStartIndex <= newEndIndex) {\r\n      for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n        // 这是一个优化写法 insertBefore的第一个参数是null等同于appendChild作用\r\n        const ele =\r\n          newCh[newEndIndex + 1] == null ? null : newCh[newEndIndex + 1].el;\r\n        parent.insertBefore(createElm(newCh[i]), ele);\r\n      }\r\n    }\r\n    // 如果新节点循环完毕 老节点还有  证明老的节点需要直接被删除\r\n    if (oldStartIndex <= oldEndIndex) {\r\n      for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n        let child = oldCh[i];\r\n        if (child != undefined) {\r\n          parent.removeChild(child.el);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ","// lifecycle.js\r\nimport { createElementVNode, createTextVNode } from './vdom/index'\r\nimport Watcher from './observe/watcher'\r\nimport { patch } from './vdom/patch'\r\n\r\nexport function initLifeCycle(Vue) {\r\n    // 虚拟dom转换真实dom\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm = this\r\n        const el = vm.$el\r\n\r\n        // patch 初始化，更新功能\r\n\r\n        vm.$el = patch(el, vnode)\r\n    }\r\n\r\n    // _c('div',{},...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) {\r\n        if (value !== 'object') {\r\n            return value\r\n        }\r\n        return JSON.stringify(value)\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        const vm = this\r\n        // console.log('_render')\r\n        // 让vm中的this指向vm\r\n        return this.$options.render.call(vm)\r\n        console.log('_render') // 通过ast语法转义后生成的render方法\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    // 1.调用render方法产生虚拟节点,虚拟dom\r\n    vm.$el = el;\r\n    // 引入watcher的概念 这里注册一个渲染watcher 执行vm._update(vm._render())方法渲染视图\r\n    callHook(vm, \"beforeMount\"); //初始渲染之前\r\n    let updateComponent = () => {\r\n      vm._update(vm._render());\r\n    };\r\n    new Watcher(\r\n      vm,\r\n      updateComponent,\r\n      () => {\r\n        callHook(vm, \"beforeUpdate\"); //更新之前\r\n      },\r\n      true\r\n    );\r\n    callHook(vm, \"mounted\"); //渲染完成之后\r\n    // 2.根据虚拟dom产生真实dom\r\n    // 3.插入el元素中\r\n  }\r\n\r\n// vue核心流程：\r\n// 1.创造了响应式数据\r\n// 2.模板转化成ast语法树\r\n// 3.将ast语法树转换成render函数\r\n// 4.后续每次进行数据跟心只需要执行render函数就行，无需执行ast语法树转化过程\r\n\r\n// render函数会产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点来创造真实dom\r\n\r\nexport function callHook(vm, hook) {\r\n    console.log(hook)\r\n    const handlers = vm.$options[hook]\r\n    if(handlers){\r\n        handlers.forEach(handler=>handler.call(vm))\r\n    }\r\n}","import { initState } from \"./state\"\r\nimport { compileToFunction } from './compiler/index'\r\nimport { callHook, mountComponent } from \"./lifecycle\"\r\nimport { mergeOptions } from \"./utils\"\r\n\r\n// 给vue增加init方法\r\nexport function initMixin(Vue) {\r\n    // 用于初始化操作\r\n    Vue.prototype._init = function (options) {\r\n        // vue中,vm.$options 就是获取用户的配置\r\n        const vm = this\r\n        vm.$options = mergeOptions(this.constructor.options,options)  // 将用户的选项挂载到实例上\r\n        // 初始化状态\r\n        callHook(vm,'beforeCreate')\r\n        initState(vm)\r\n        callHook(vm,'created')\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el)   // 实现数据挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n\r\n        let ops = vm.$options\r\n        if (!ops.render) {                 // 先查找有没有render函数\r\n            let template                 // 没有render，在看有没有template，没有template，采用外部的template\r\n            if (!ops.template && el) {     // 没有模板，但是有el\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {                 // 如果有el，则采用模板内容\r\n                    template = ops.template\r\n                }\r\n            }\r\n            // 写了temlate，就直接使用\r\n            if (template) {\r\n                // 这里我们需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render  // jsx最终编译成h('xxx',{xxx})\r\n            }\r\n        }\r\n        mountComponent(vm,el)  // 组件挂载\r\n        // console.log(ops.render)   // 最终我们获取render方法\r\n\r\n        // script 变标签引用vue.global.js   这个编译过程是浏览器运行的\r\n        // runtime 不包含模板编译，整个编译过程通过loader转义vue文件，\r\n    }\r\n}\r\n\r\n","// vue\r\nimport { compileToFunction } from './compiler'\r\nimport { initGlobalApi } from './global-api'\r\nimport { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\nimport { initStateMixin } from './state'\r\nimport { createElm, patch } from './vdom/patch'\r\n\r\nfunction Vue(options) {\r\n    // options => 用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue) // 扩展init方法\r\ninitLifeCycle(Vue) // m_update vm._render\r\ninitGlobalApi(Vue) // 全局api的实现\r\ninitStateMixin(Vue) // 实现nextTick ,$watch\r\n\r\n// ----------------观察虚拟dom前后变化------------------------\r\n\r\nlet render1 = compileToFunction(`\r\n<ul key=\"a\" a=\"1\" style=\"color:red\">\r\n<li key=\"a\">a</li>\r\n<li key=\"b\">b</li>\r\n<li key=\"c\">c</li>\r\n</ul>`)\r\nlet vm1 = new Vue({ data: { name: 'ok' } })\r\nlet prevVnode = render1.call(vm1)\r\n\r\nlet el = createElm(prevVnode)\r\ndocument.body.appendChild(el)\r\n\r\nlet render2 = compileToFunction(\r\n    `<ul key=\"a\" a=\"1\" style=\"color:red\">\r\n    <li key=\"a\">a</li>\r\n    <li key=\"b\">b</li>\r\n    <li key=\"c\">c</li>\r\n    <li key=\"d\">c</li>\r\n    </ul>`\r\n)\r\nlet vm2 = new Vue({ data: { name: 'okzfans' } })\r\nlet nextVnode = render2.call(vm2)\r\n\r\n// 直接替换节点，老节点，会导致性能开销打\r\n// let newEl = createElm(nextVnode)\r\n// el.parentNode.replaceChild(newEl,el)\r\n\r\nsetTimeout(() => {\r\n    patch(prevVnode, nextVnode)\r\n}, 1000)\r\n\r\nconsole.log('prevVnode', prevVnode)\r\n\r\nexport default Vue\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElememt","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","codegen","exec","tokens","lastIndex","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","hook","mergeOptions","options","k","mergeFiled","hasOwnProperty","initGlobalApi","Vue","mixin","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","update","pushTarget","popTarget","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","childOb","get","dependArray","console","log","set","newVal","lenght","current","_typeof","Watcher","vm","exportFn","cb","renderWatcher","getter","path","exprOrFn","deps","depsId","Set","lazy","dirty","user","undefined","has","add","evaluate","queueWatcher","run","oldVal","isObject","queue","pendding","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","handler","creatWatcher","$watch","setter","createComputedGetter","initStateMixin","$nextTick","createElementVNode","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibiling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldCh","newCh","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","nextSibling","moveIndex","moveVnode","ele","initLifeCycle","_update","$el","_c","_v","_s","_render","mountComponent","callHook","updateComponent","handlers","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","render1","vm1","prevVnode","body","render2","vm2","nextVnode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;EAEA;EACA;;EAEA,IAAMA,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,UAAAC,MAAA,CAAUF,MAAM,EAAAE,OAAAA,CAAAA,CAAAA,MAAA,CAAQF,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD,IAAMG,YAAY,GAAG,IAAIC,MAAM,MAAAF,MAAA,CAAMD,YAAY,CAAA,CAAG,CAAC;EACrD,IAAMI,MAAM,GAAG,IAAID,MAAM,SAAAF,MAAA,CAASD,YAAY,EAAA,QAAA,CAAA,CAAS,CAAC;EACxD,IAAMK,SAAS,GACX,2EAA2E,CAAC;EAGhF,IAAMC,aAAa,GAAG,YAAY,CAAA;;EAGlC;EACA;EACO,SAASC,SAASA,CAACC,IAAI,EAAE;EAAK;;IAEjC,IAAMC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;IACnB,IAAMC,KAAK,GAAG,EAAE,CAAE;EAClB,EAAA,IAAIC,aAAa,CAAI;EACrB,EAAA,IAAIC,IAAI,CAAA;EACR,EAAA,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,KAAK,EAAE;MAClC,OAAO;EACHD,MAAAA,GAAG,EAAHA,GAAG;EACHE,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,QAAQ,EAAE,EAAE;EACZF,MAAAA,KAAK,EAALA,KAAK;EACLG,MAAAA,MAAM,EAAE,IAAA;OACX,CAAA;EACL,GAAA;EAEA,EAAA,SAASC,KAAKA,CAACL,GAAG,EAAEC,KAAK,EAAE;MACvB,IAAIK,IAAI,GAAGP,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAI;MAC3C,IAAI,CAACH,IAAI,EAAE;EAAG;QACVA,IAAI,GAAGQ,IAAI,CAAK;EACpB,KAAA;;EACA,IAAA,IAAIT,aAAa,EAAE;QACfS,IAAI,CAACF,MAAM,GAAGP,aAAa,CAAA;EAC3BA,MAAAA,aAAa,CAACM,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC,CAAA;EACrC,KAAA;EACAV,IAAAA,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC,CAAA;MAChBT,aAAa,GAAGS,IAAI,CAAK;EAC7B,GAAA;;IACA,SAASE,KAAKA,CAACC,IAAI,EAAE;EAAO;MACxBA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;EAC9BD,IAAAA,IAAI,IAAIZ,aAAa,CAACM,QAAQ,CAACI,IAAI,CAAC;EAChCL,MAAAA,IAAI,EAAEP,SAAS;EACfc,MAAAA,IAAI,EAAJA,IAAI;EACJL,MAAAA,MAAM,EAAEP,aAAAA;EACZ,KAAC,CAAC,CAAA;EACN,GAAA;IACA,SAASc,GAAGA,GAAG;EACX,IAAWf,KAAK,CAACgB,GAAG,GAAE;MACtBf,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAG,CAAC,CAAC,CAAA;EAC3C,GAAA;IACA,SAASC,OAAOA,CAACC,CAAC,EAAE;EAChBtB,IAAAA,IAAI,GAAGA,IAAI,CAACuB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC5B,GAAA;IACA,SAASE,aAAaA,GAAG;EAAK;EAC1B,IAAA,IAAMZ,KAAK,GAAGZ,IAAI,CAACyB,KAAK,CAAC/B,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIkB,KAAK,EAAE;EACP,MAAA,IAAMa,KAAK,GAAG;EACVC,QAAAA,OAAO,EAAEd,KAAK,CAAC,CAAC,CAAC;EAAI;UACrBJ,KAAK,EAAE,EAAE;SACZ,CAAA;;EACDa,MAAAA,OAAO,CAACT,KAAK,CAAC,CAAC,CAAC,CAACQ,MAAM,CAAC,CAAA;QACxB,IAAIO,IAAI,EAAET,IAAG,CAAA;QACb,OAAO,EAAEA,IAAG,GAAGlB,IAAI,CAACyB,KAAK,CAAC3B,aAAa,CAAC,CAAC,KAAK6B,IAAI,GAAG3B,IAAI,CAACyB,KAAK,CAAC5B,SAAS,CAAC,CAAC,EAAE;EAAI;EAC7EwB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAACP,MAAM,CAAC,CAAA;EACvBK,QAAAA,KAAK,CAACjB,KAAK,CAACM,IAAI,CAAC;EAAEc,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EAAEE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EAAC,SAAC,CAAC,CAAA;EAC5E,OAAA;EACA,MAAA,IAAIT,IAAG,EAAE;EACLG,QAAAA,OAAO,CAACH,IAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAA;EAC1B,OAAA;EACA,MAAA,OAAOK,KAAK,CAAA;EAChB,KAAA;EACA,IAAA,OAAO,KAAK,CAAE;EAClB,GAAA;;EACA,EAAA,OAAOzB,IAAI,EAAE;EACT;EACA;EACA,IAAA,IAAI8B,OAAO,GAAG9B,IAAI,CAAC+B,OAAO,CAAC,GAAG,CAAC,CAAA;MAC/B,IAAID,OAAO,IAAI,CAAC,EAAE;EACd,MAAA,IAAME,aAAa,GAAGR,aAAa,EAAE,CAAG;EACxC,MAAA,IAAIQ,aAAa,EAAE;EAAG;UAClBpB,KAAK,CAACoB,aAAa,CAACN,OAAO,EAAEM,aAAa,CAACxB,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACJ,OAAA;EACA,MAAA,IAAIyB,WAAW,GAAGjC,IAAI,CAACyB,KAAK,CAAC7B,MAAM,CAAC,CAAA;EACpC,MAAA,IAAIqC,WAAW,EAAE;EACbZ,QAAAA,OAAO,CAACY,WAAW,CAAC,CAAC,CAAC,CAACb,MAAM,CAAC,CAAA;EAC9BF,QAAAA,GAAG,CAACe,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnB,QAAA,SAAA;EACJ,OAAA;EACJ,KAAA;MACA,IAAIH,OAAO,GAAG,CAAC,EAAE;QACb,IAAId,IAAI,GAAGhB,IAAI,CAACuB,SAAS,CAAC,CAAC,EAAEO,OAAO,CAAC,CAAC;EACtC,MAAA,IAAId,IAAI,EAAE;UACND,KAAK,CAACC,IAAI,CAAC,CAAA;EACXK,QAAAA,OAAO,CAACL,IAAI,CAACI,MAAM,CAAC,CAAI;EAC5B,OAAA;EAEJ,KAAA;EACJ,GAAA;;EACA,EAAA,OAAOf,IAAI,CAAA;EACf;;EC3GA,SAAS6B,QAAQA,CAAC1B,KAAK,EAAC;IACpB,IAAI2B,GAAG,GAAG,EAAE,CAAC;IAAA,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GACqB;EAC9B,IAAA,IAAIT,IAAI,GAAGnB,KAAK,CAAC6B,CAAC,CAAC,CAAA;EAEnB,IAAA,IAAGV,IAAI,CAACC,IAAI,KAAK,OAAO,EAAC;EACrB;QACA,IAAIU,GAAG,GAAG,EAAE,CAAA;EAEZX,MAAAA,IAAI,CAACE,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAAAC,IAAI,EAAE;EAChC,QAAA,IAAAC,WAAA,GAAmBD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;YAAAI,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7BG,UAAAA,GAAG,GAAAF,YAAA,CAAA,CAAA,CAAA;EAAEd,UAAAA,KAAK,GAAAc,YAAA,CAAA,CAAA,CAAA,CAAA;EACfL,QAAAA,GAAG,CAACO,GAAG,CAAC,GAAGhB,KAAK,CAAA;EACpB,OAAC,CAAC,CAAA;QACFF,IAAI,CAACE,KAAK,GAAGS,GAAG,CAAA;EACpB,KAAA;EAEAH,IAAAA,GAAG,OAAA1C,MAAA,CAAKkC,IAAI,CAACC,IAAI,OAAAnC,MAAA,CAAIqD,IAAI,CAACC,SAAS,CAACpB,IAAI,CAACE,KAAK,CAAC,MAAG,CAAE;KACvD,CAAA;EAfD,EAAA,KAAI,IAAIQ,CAAC,GAAG,CAAC,EAACA,CAAC,GAAC7B,KAAK,CAACY,MAAM,EAACiB,CAAC,EAAE,EAAA;MAAAD,KAAA,EAAA,CAAA;EAAA,GAAA;EAgBhC,EAAA,OAAA,GAAA,CAAA3C,MAAA,CAAW0C,GAAG,CAACa,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAG;EACjC,CAAA;;EAEA,IAAIC,YAAY,GAAG,0BAA0B,CAAC;;EAE9C,SAASC,GAAGA,CAACrC,IAAI,EAAC;EACd,EAAA,IAAGA,IAAI,CAACJ,IAAI,KAAK,CAAC,EAAE;MAChB,OAAO0C,OAAO,CAACtC,IAAI,CAAC,CAAA;EACxB,GAAC,MAAM;EACH;EACA,IAAA,IAAIG,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAA;EACpB,IAAA,IAAG,CAACiC,YAAY,CAACG,IAAI,CAACpC,IAAI,CAAC,EAAC;EACxB,MAAA,OAAA,KAAA,CAAAvB,MAAA,CAAaqD,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACrC,KAAC,MAAM;QACH,IAAIqC,MAAM,GAAG,EAAE,CAAA;EACf,MAAA,IAAI5B,KAAK,CAAA;QACTwB,YAAY,CAACK,SAAS,GAAG,CAAC,CAAA;QAC1B,IAAIA,SAAS,GAAG,CAAC,CAAA;QACjB,OAAM7B,KAAK,GAAGwB,YAAY,CAACG,IAAI,CAACpC,IAAI,CAAC,EAAC;EAElC,QAAA,IAAIuC,KAAK,GAAG9B,KAAK,CAAC8B,KAAK,CAAC;UACxB,IAAGA,KAAK,GAAGD,SAAS,EAAC;EACjBD,UAAAA,MAAM,CAACvC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACM,SAAS,EAACC,KAAK,CAAC,CAAC,CAAC,CAAA;EAC5D,SAAA;;EAEA;EACAF,QAAAA,MAAM,CAACvC,IAAI,CAAArB,KAAAA,CAAAA,MAAA,CAAOgC,KAAK,CAAC,CAAC,CAAC,CAAC+B,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;UACrCF,SAAS,GAAGC,KAAK,GAAG9B,KAAK,CAAC,CAAC,CAAC,CAACL,MAAM,CAAA;EACvC,OAAA;EACA,MAAA,IAAGkC,SAAS,GAAGtC,IAAI,CAACI,MAAM,EAAC;EACvBiC,QAAAA,MAAM,CAACvC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACM,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,OAAA;EAEA,MAAA,OAAA,KAAA,CAAA7D,MAAA,CAAa4D,MAAM,CAACI,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EACjC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,SAASC,WAAWA,CAAChD,QAAQ,EAAC;EAC1B,EAAA,OAAOA,QAAQ,CAACiD,GAAG,CAAC,UAAAC,KAAK,EAAA;MAAA,OAAIV,GAAG,CAACU,KAAK,CAAC,CAAA;EAAA,GAAA,CAAC,CAACH,IAAI,CAAC,GAAG,CAAC,CAAA;EACtD,CAAA;EAEA,SAASN,OAAOA,CAACU,GAAG,EAAC;EACjB,EAAA,IAAInD,QAAQ,GAAGgD,WAAW,CAACG,GAAG,CAACnD,QAAQ,CAAC,CAAA;EACxC,EAAA,IAAIoD,IAAI,GAAArE,MAAAA,CAAAA,MAAA,CAAUoE,GAAG,CAACtD,GAAG,EAAAd,IAAAA,CAAAA,CAAAA,MAAA,CAAKoE,GAAG,CAACrD,KAAK,CAACY,MAAM,GAAG,CAAC,GAAGc,QAAQ,CAAC2B,GAAG,CAACrD,KAAK,CAAC,GAAE,MAAM,EAAAf,QAAAA,CAAAA,CAAAA,MAAA,CAE5EoE,GAAG,CAACnD,QAAQ,CAACU,MAAM,GAAA3B,GAAAA,CAAAA,MAAA,CAAKiB,QAAQ,CAAA,GAAG,EAAE,EACtC,GAAA,CAAA,CAAA;EACH,EAAA,OAAOoD,IAAI,CAAA;EACf,CAAA;EAEO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAExC;EACA,EAAA,IAAIH,GAAG,GAAG9D,SAAS,CAACiE,QAAQ,CAAC,CAAA;;EAE7B;;EAEA,EAAA,IAAIF,IAAI,GAAGX,OAAO,CAACU,GAAG,CAAC,CAAA;EACvB;EACA;EACA;EACAC,EAAAA,IAAI,GAAArE,oBAAAA,CAAAA,MAAA,CAAwBqE,IAAI,EAAG,GAAA,CAAA,CAAA;EACnC,EAAA,IAAIG,MAAM,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAAC,CAAE;;EAEjC,EAAA,OAAOG,MAAM,CAAA;EACjB;;ECtFA;EACA;EACO,IAAME,eAAe,GAAG,CAC3B,cAAc,EACd,SAAS,EACT,aAAa,EACb,SAAS,EACT,cAAc,EACd,SAAS,EACT,eAAe,EACf,WAAW,CACd,CAAA;;EAED;EACA,IAAMC,MAAM,GAAG,EAAE,CAAA;;EAEjB;EACA,SAASC,SAASA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACpC;EACA,EAAA,IAAIA,QAAQ,EAAE;EACV,IAAA,IAAID,SAAS,EAAE;EACX;EACA,MAAA,OAAOA,SAAS,CAAC7E,MAAM,CAAC8E,QAAQ,CAAC,CAAA;EACrC,KAAC,MAAM;EACH;QACA,OAAO,CAACA,QAAQ,CAAC,CAAA;EACrB,KAAA;EACJ,GAAC,MAAM;EACH,IAAA,OAAOD,SAAS,CAAA;EACpB,GAAA;EACJ,CAAA;;EAEA;EACAH,eAAe,CAAC3B,OAAO,CAAC,UAACgC,IAAI,EAAK;EAC9BJ,EAAAA,MAAM,CAACI,IAAI,CAAC,GAAGH,SAAS,CAAA;EAC5B,CAAC,CAAC,CAAA;;EAEF;EACO,SAASI,YAAYA,CAAC9D,MAAM,EAAEiD,KAAK,EAAE;IACxC,IAAMc,OAAO,GAAG,EAAE,CAAA;EAClB;EACA,EAAA,KAAK,IAAIC,CAAC,IAAIhE,MAAM,EAAE;MAClBiE,UAAU,CAACD,CAAC,CAAC,CAAA;EACjB,GAAA;EACA;EACA,EAAA,KAAK,IAAIA,EAAC,IAAIf,KAAK,EAAE;EACjB,IAAA,IAAI,CAACjD,MAAM,CAACkE,cAAc,CAACF,EAAC,CAAC,EAAE;QAC3BC,UAAU,CAACD,EAAC,CAAC,CAAA;EACjB,KAAA;EACJ,GAAA;;EAEA;IACA,SAASC,UAAUA,CAACD,CAAC,EAAE;EACnB,IAAA,IAAIP,MAAM,CAACO,CAAC,CAAC,EAAE;EACXD,MAAAA,OAAO,CAACC,CAAC,CAAC,GAAGP,MAAM,CAACO,CAAC,CAAC,CAAChE,MAAM,CAACgE,CAAC,CAAC,EAAEf,KAAK,CAACe,CAAC,CAAC,CAAC,CAAA;EAC/C,KAAC,MAAM;EACH;EACAD,MAAAA,OAAO,CAACC,CAAC,CAAC,GAAGf,KAAK,CAACe,CAAC,CAAC,GAAGf,KAAK,CAACe,CAAC,CAAC,GAAGhE,MAAM,CAACgE,CAAC,CAAC,CAAA;EAChD,KAAA;EACJ,GAAA;EACA,EAAA,OAAOD,OAAO,CAAA;EAClB;;EC1DO,SAASI,aAAaA,CAACC,GAAG,EAAE;EAC/B;EACA;EACAA,EAAAA,GAAG,CAACL,OAAO,GAAG,EAAE,CAAA;EAChBK,EAAAA,GAAG,CAACC,KAAK,GAAG,UAAUA,KAAK,EAAE;MACzB,IAAI,CAACN,OAAO,GAAGD,YAAY,CAAC,IAAI,CAACC,OAAO,EAAEM,KAAK,CAAC,CAAA;EAChD,IAAA,OAAO,IAAI,CAAA;KACd,CAAA;EACL;;ECXA;;EAEA,IAAIC,aAAa,GAAGC,KAAK,CAACC,SAAS,CAAC;;EAEpC;EACO,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAAA;EAEvD,IAAIM,OAAO,GAAG;EAAE;EACZ,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,MAAM,EACN,QAAQ,CACX,CAAA;EAEDA,OAAO,CAAC/C,OAAO,CAAC,UAAAgD,MAAM,EAAI;EACtB;EACAJ,EAAAA,aAAa,CAACI,MAAM,CAAC,GAAG,YAAiB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAvE,MAAA,EAALwE,IAAI,GAAAV,IAAAA,KAAA,CAAAQ,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;EACpC;;MAEA,IAAMC,MAAM,GAAG,CAAAL,qBAAA,GAAAR,aAAa,CAACO,MAAM,CAAC,EAACO,IAAI,CAAAC,KAAA,CAAAP,qBAAA,EAAC,CAAA,IAAI,EAAAhG,MAAA,CAAImG,IAAI,CAAA,CAAC,CAAC;EACxD,IAAA,IAAIK,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAC;EACrB,IAAA,QAAOX,MAAM;EACT,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;UACVS,QAAQ,GAAGL,IAAI,CAAC;EAChB,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EAAE;EACXK,QAAAA,QAAQ,GAAGL,IAAI,CAAC5C,KAAK,CAAC,CAAC,CAAC,CAAA;EAEnB,KAAA;EAEb;EACA,IAAA,IAAGiD,QAAQ,EAAC;EACR;EACAC,MAAAA,EAAE,CAACE,YAAY,CAACH,QAAQ,CAAC,CAAA;EAC7B,KAAA;;EAEA;EACA;EACAC,IAAAA,EAAE,CAACG,GAAG,CAACC,MAAM,EAAE,CAAC;EAChB;EACA,IAAA,OAAOR,MAAM,CAAA;KAChB,CAAA;EACL,CAAC,CAAC;;EC/CF,IAAIS,IAAE,GAAG,CAAC,CAAA;EAAC,IAELC,GAAG,gBAAA,YAAA;EACL,EAAA,SAAAA,MAAc;EAAAC,IAAAA,eAAA,OAAAD,GAAA,CAAA,CAAA;EACV,IAAA,IAAI,CAACD,EAAE,GAAGA,IAAE,EAAE,CAAC;EACf,IAAA,IAAI,CAACG,IAAI,GAAG,EAAE,CAAC;EACnB,GAAA;EAACC,EAAAA,YAAA,CAAAH,GAAA,EAAA,CAAA;MAAA3D,GAAA,EAAA,QAAA;MAAAhB,KAAA,EAED,SAAA+E,MAAAA,GAAQ;EACJ;EACAJ,MAAAA,GAAG,CAACK,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAA;EACvB;EACA;EACA;EACA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAAjE,GAAA,EAAA,QAAA;EAAAhB,IAAAA,KAAA,EAED,SAAAkF,MAAOC,CAAAA,OAAO,EAAC;EACX,MAAA,IAAI,CAACN,IAAI,CAAC5F,IAAI,CAACkG,OAAO,CAAC,CAAA;EAC3B,KAAA;EAAC,GAAA,EAAA;MAAAnE,GAAA,EAAA,QAAA;MAAAhB,KAAA,EAED,SAAAyE,MAAAA,GAAQ;EACJ,MAAA,IAAI,CAACI,IAAI,CAAClE,OAAO,CAAC,UAAAwE,OAAO,EAAA;UAAA,OAAIA,OAAO,CAACC,MAAM,EAAE,CAAA;EAAA,OAAA,CAAC,CAAC;EACnD,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAT,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAELA,GAAG,CAACK,MAAM,GAAG,IAAI,CAAA;EAEjB,IAAI1G,KAAK,GAAG,EAAE,CAAA;EACP,SAAS+G,UAAUA,CAACF,OAAO,EAAC;EAC/B7G,EAAAA,KAAK,CAACW,IAAI,CAACkG,OAAO,CAAC,CAAA;IACnBR,GAAG,CAACK,MAAM,GAAGG,OAAO,CAAA;EACxB,CAAA;EAEO,SAASG,SAASA,GAAE;IACvBhH,KAAK,CAACgB,GAAG,EAAE,CAAA;IACXqF,GAAG,CAACK,MAAM,GAAG1G,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAI,CAAC,CAAC,CAAA;EACzC;;EClCuB,IACjBgG,OAAO,gBAAA,YAAA;IACT,SAAAA,OAAAA,CAAYC,IAAI,EAAC;EAAAZ,IAAAA,eAAA,OAAAW,OAAA,CAAA,CAAA;EAEb;EACA,IAAA,IAAI,CAACf,GAAG,GAAG,IAAIG,GAAG,EAAE,CAAA;;EAEpB;EACA;;EAEA;EACA;EACAnB,IAAAA,MAAM,CAACiC,cAAc,CAACD,IAAI,EAAE,QAAQ,EAAE;EAClCxF,MAAAA,KAAK,EAAE,IAAI;EACX0F,MAAAA,UAAU,EAAE,KAAA;EAChB,KAAC,CAAC,CAAA;EAEF,IAAA,IAAGrC,KAAK,CAACsC,OAAO,CAACH,IAAI,CAAC,EAAC;EACnB;QACAA,IAAI,CAACI,SAAS,GAAGrC,aAAa,CAAA;EAC9B,MAAA,IAAI,CAACgB,YAAY,CAACiB,IAAI,CAAC,CAAA;EAC3B,KAAC,MAAK;EACF,MAAA,IAAI,CAACK,IAAI,CAACL,IAAI,CAAC,CAAA;EACnB,KAAA;EACJ,GAAA;EAACV,EAAAA,YAAA,CAAAS,OAAA,EAAA,CAAA;MAAAvE,GAAA,EAAA,MAAA;EAAAhB,IAAAA,KAAA,EACD,SAAA6F,IAAKL,CAAAA,IAAI,EAAC;EAAE;EACR;QACAhC,MAAM,CAACsC,IAAI,CAACN,IAAI,CAAC,CAAC7E,OAAO,CAAC,UAAAK,GAAG,EAAA;UAAA,OAAI+E,cAAc,CAACP,IAAI,EAACxE,GAAG,EAACwE,IAAI,CAACxE,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EACxE,KAAA;EAAC,GAAA,EAAA;MAAAA,GAAA,EAAA,cAAA;EAAAhB,IAAAA,KAAA,EAED,SAAAuE,YAAaiB,CAAAA,IAAI,EAAE;EAAE;EACjBA,MAAAA,IAAI,CAAC7E,OAAO,CAAC,UAAAC,IAAI,EAAA;UAAA,OAAIoF,OAAO,CAACpF,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACvC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA2E,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGE,SAASQ,cAAcA,CAACf,MAAM,EAAChE,GAAG,EAAChB,KAAK,EAAC;EAAE;EAC9C,EAAA,IAAIiG,OAAO,GAAGD,OAAO,CAAChG,KAAK,CAAC,CAAC;EAC7B,EAAA,IAAIwE,GAAG,GAAG,IAAIG,GAAG,EAAE,CAAC;EACpBnB,EAAAA,MAAM,CAACiC,cAAc,CAACT,MAAM,EAAChE,GAAG,EAAC;MAC7BkF,GAAG,EAAA,SAAAA,MAAE;QACD,IAAGvB,GAAG,CAACK,MAAM,EAAC;UACVR,GAAG,CAACO,MAAM,EAAE,CAAE;EACd,QAAA,IAAGkB,OAAO,EAAC;EACPA,UAAAA,OAAO,CAACzB,GAAG,CAACO,MAAM,EAAE,CAAC;EACrB,UAAA,IAAG1B,KAAK,CAACsC,OAAO,CAAC3F,KAAK,CAAC,EAAC;cACpBmG,WAAW,CAACnG,KAAK,CAAC,CAAA;EACtB,WAAA;EACJ,SAAA;EACJ,OAAA;EACAoG,MAAAA,OAAO,CAACC,GAAG,CAAC,OAAO,EAACrF,GAAG,CAAC,CAAA;EACxB,MAAA,OAAOhB,KAAK,CAAA;OACf;MACDsG,GAAG,EAAA,SAAAA,GAACC,CAAAA,MAAM,EAAC;EACPH,MAAAA,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACrB,IAAGE,MAAM,KAAKvG,KAAK,EAAE,OAAA;QACrBgG,OAAO,CAACO,MAAM,CAAC,CAAA;EACfvG,MAAAA,KAAK,GAAGuG,MAAM,CAAA;QACd/B,GAAG,CAACC,MAAM,EAAE,CAAC;EACjB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;;EAEA;EACA,SAAS0B,WAAWA,CAACnG,KAAK,EAAC;EACvB,EAAA,KAAI,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAER,KAAK,CAACwG,MAAM,EAAChG,CAAC,EAAE,EAAC;EAC/B,IAAA,IAAIiG,OAAO,GAAGzG,KAAK,CAACQ,CAAC,CAAC,CAAA;MACtBiG,OAAO,CAACnC,MAAM,IAAEmC,OAAO,CAACnC,MAAM,CAACE,GAAG,CAACO,MAAM,EAAE,CAAA;EAC3C,IAAA,IAAG1B,KAAK,CAACsC,OAAO,CAACc,OAAO,CAAC,EAAC;QACtBN,WAAW,CAACM,OAAO,CAAC,CAAA;EACxB,KAAA;EACJ,GAAA;EACJ,CAAA;EAEO,SAAST,OAAOA,CAACR,IAAI,EAAC;EAEzB;IACA,IAAIkB,OAAA,CAAOlB,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAC;EAC1C,IAAA,OAAM;EACV,GAAA;;EACA,EAAA,IAAGA,IAAI,CAAClB,MAAM,YAAYiB,OAAO,EAAC;MAC9B,OAAOC,IAAI,CAAClB,MAAM,CAAA;EACtB,GAAA;EACA;;EAEA,EAAA,OAAO,IAAIiB,OAAO,CAACC,IAAI,CAAC,CAAA;EAC5B;;ECpFA;EACA;;EAEA;EACA,IAAId,EAAE,GAAG,CAAC,CAAA;;EAEV;EAAA,IACMiC,OAAO,gBAAA,YAAA;IACT,SAAAA,OAAAA,CAAYC,EAAE,EAAEC,QAAQ,EAAEhE,OAAO,EAAEiE,EAAE,EAAE;EAAAlC,IAAAA,eAAA,OAAA+B,OAAA,CAAA,CAAA;EACnC,IAAA,IAAI,CAACjC,EAAE,GAAGA,EAAE,EAAE,CAAA;MACd,IAAI,CAACkC,EAAE,GAAGA,EAAE,CAAA;EACZ,IAAA,IAAI,CAACG,aAAa,GAAGlE,OAAO,CAAC;;EAE7B,IAAA,IAAI,OAAOgE,QAAQ,KAAK,QAAQ,EAAE;QAC9B,IAAI,CAACG,MAAM,GAAG,YAAY;EACtB;EACA,QAAA,IAAIC,IAAI,GAAGC,QAAQ,CAACxG,KAAK,CAAC,GAAG,CAAC,CAAA;UAC9B,IAAID,GAAG,GAAGmG,EAAE,CAAA;EACZ,QAAA,KAAK,IAAIpG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyG,IAAI,CAAC1H,MAAM,EAAEiB,CAAC,EAAE,EAAE;YAClCC,GAAG,GAAGA,GAAG,CAACwG,IAAI,CAACzG,CAAC,CAAC,CAAC,CAAC;EACvB,SAAA;;EACA,QAAA,OAAOC,GAAG,CAAA;SACb,CAAA;EACL,KAAC,MAAM;EACH,MAAA,IAAI,CAACuG,MAAM,GAAGH,QAAQ,CAAC;EAC3B,KAAA;;EACA,IAAA,IAAI,CAACM,IAAI,GAAG,EAAE,CAAC;EACf,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAC;;EAExB,IAAA,IAAI,CAACC,IAAI,GAAGzE,OAAO,CAACyE,IAAI,CAAA;EACxB,IAAA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,IAAI,CAAC;;EAEvB,IAAA,IAAI,CAACE,IAAI,GAAG3E,OAAO,CAAC2E,IAAI,CAAA;MACxB,IAAI,CAACV,EAAE,GAAGA,EAAE,CAAA;EAEZ,IAAA,IAAI,CAAC9G,KAAK,GAAG,IAAI,CAACsH,IAAI,GAAGG,SAAS,GAAG,IAAI,CAACvB,GAAG,EAAE,CAAA;EACnD,GAAA;EAACpB,EAAAA,YAAA,CAAA6B,OAAA,EAAA,CAAA;MAAA3F,GAAA,EAAA,QAAA;EAAAhB,IAAAA,KAAA,EAED,SAAAiF,MAAOT,CAAAA,GAAG,EAAE;EACR;EACA,MAAA,IAAIE,EAAE,GAAGF,GAAG,CAACE,EAAE,CAAA;QACf,IAAI,CAAC,IAAI,CAAC0C,MAAM,CAACM,GAAG,CAAChD,EAAE,CAAC,EAAE;EACtB,QAAA,IAAI,CAACyC,IAAI,CAAClI,IAAI,CAACuF,GAAG,CAAC,CAAA;EACnB,QAAA,IAAI,CAAC4C,MAAM,CAACO,GAAG,CAACjD,EAAE,CAAC,CAAA;EACnBF,QAAAA,GAAG,CAACU,MAAM,CAAC,IAAI,CAAC,CAAC;EACrB,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAAlE,GAAA,EAAA,UAAA;MAAAhB,KAAA,EAED,SAAA4H,QAAAA,GAAW;EACP,MAAA,IAAI,CAAC5H,KAAK,GAAG,IAAI,CAACkG,GAAG,EAAE,CAAC;QACxB,IAAI,CAACqB,KAAK,GAAG,KAAK,CAAA;EACtB,KAAA;EAAC,GAAA,EAAA;MAAAvG,GAAA,EAAA,KAAA;MAAAhB,KAAA,EAED,SAAAkG,GAAAA,GAAM;QACFb,UAAU,CAAC,IAAI,CAAC,CAAA;EAChB;EACA,MAAA,IAAIrF,KAAK,GAAG,IAAI,CAACgH,MAAM,CAAC9C,IAAI,CAAC,IAAI,CAAC0C,EAAE,CAAC,CAAC;EACtC;EACAtB,MAAAA,SAAS,EAAE,CAAA;EACX,MAAA,OAAOtF,KAAK,CAAA;EAChB,KAAA;EAAC,GAAA,EAAA;MAAAgB,GAAA,EAAA,QAAA;MAAAhB,KAAA,EAED,SAAA+E,MAAAA,GAAS;EACL,MAAA,IAAIvE,CAAC,GAAG,IAAI,CAAC2G,IAAI,CAAC5H,MAAM,CAAA;QACxB,OAAOiB,CAAC,EAAE,EAAE;EACR;UACA,IAAI,CAAC2G,IAAI,CAAC3G,CAAC,CAAC,CAACuE,MAAM,EAAE,CAAC;EAC1B,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAA/D,GAAA,EAAA,QAAA;MAAAhB,KAAA,EAED,SAAAoF,MAAAA,GAAS;QACL,IAAI,IAAI,CAACkC,IAAI,EAAE;EACX;UACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAAA;EACrB,OAAC,MAAM;UACHM,YAAY,CAAC,IAAI,CAAC,CAAA;EAClB;EACJ,OAAA;EACJ,KAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,GAAA,EAAA;MAAA7G,GAAA,EAAA,KAAA;MAAAhB,KAAA,EAEA,SAAA8H,GAAAA,GAAM;EACF,MAAA,IAAMvB,MAAM,GAAG,IAAI,CAACL,GAAG,EAAE,CAAC;EAC1B,MAAA,IAAM6B,MAAM,GAAG,IAAI,CAAC/H,KAAK,CAAC;EAC1B,MAAA,IAAI,CAACA,KAAK,GAAGuG,MAAM,CAAC;QACpB,IAAI,IAAI,CAACiB,IAAI,EAAE;UACX,IAAIjB,MAAM,KAAKwB,MAAM,IAAIC,QAAQ,CAACzB,MAAM,CAAC,EAAE;EACvC,UAAA,IAAI,CAACO,EAAE,CAAC5C,IAAI,CAAC,IAAI,CAAC0C,EAAE,EAAEL,MAAM,EAAEwB,MAAM,CAAC,CAAA;EACzC,SAAA;EACJ,OAEI;EAER,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAApB,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGL,IAAIsB,KAAK,GAAG,EAAE,CAAA;EACd,IAAIP,GAAG,GAAG,EAAE,CAAA;EACZ,IAAIQ,QAAQ,GAAG,KAAK,CAAC;;EAErB,SAASC,mBAAmBA,GAAG;EAC3B,EAAA,IAAIC,UAAU,GAAGH,KAAK,CAAC9G,KAAK,CAAC,CAAC,CAAC,CAAA;EAC/B8G,EAAAA,KAAK,GAAG,EAAE,CAAA;IACVP,GAAG,GAAG,EAAE,CAAA;EACRQ,EAAAA,QAAQ,GAAG,KAAK,CAAA;EAChBE,EAAAA,UAAU,CAACzH,OAAO,CAAC,UAAC0H,CAAC,EAAA;MAAA,OAAKA,CAAC,CAACP,GAAG,EAAE,CAAA;EAAA,GAAA,CAAC,CAAC;EACvC,CAAA;;EACA,SAASD,YAAYA,CAAC1C,OAAO,EAAE;EAC3B,EAAA,IAAIT,EAAE,GAAGS,OAAO,CAACT,EAAE,CAAA;EACnB,EAAA,IAAI,CAACgD,GAAG,CAAChD,EAAE,CAAC,EAAE;EACVuD,IAAAA,KAAK,CAAChJ,IAAI,CAACkG,OAAO,CAAC,CAAA;EACnBuC,IAAAA,GAAG,CAAChD,EAAE,CAAC,GAAG,IAAI,CAAA;EACd;;MAEA,IAAI,CAACwD,QAAQ,EAAE;EACXI,MAAAA,QAAQ,CAACH,mBAAsB,CAAC,CAAC;EACjCD,MAAAA,QAAQ,GAAG,IAAI,CAAA;EACnB,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,IAAIK,SAAS,GAAG,EAAE,CAAA;EAClB,IAAIC,OAAO,GAAG,KAAK,CAAA;EAEnB,SAASC,cAAcA,GAAG;EACtB,EAAA,IAAIC,GAAG,GAAGH,SAAS,CAACpH,KAAK,CAAC,CAAC,CAAC,CAAA;EAC5BqH,EAAAA,OAAO,GAAG,IAAI,CAAA;EACdD,EAAAA,SAAS,GAAG,EAAE,CAAA;EACdG,EAAAA,GAAG,CAAC/H,OAAO,CAAC,UAACmG,EAAE,EAAA;EAAA,IAAA,OAAKA,EAAE,EAAE,CAAA;EAAA,GAAA,CAAC,CAAC;EAC9B,CAAA;EACA;EACA;EACA,IAAI6B,SAAS,CAAA;EACb,IAAIC,OAAO,EAAE;IACTD,SAAS,GAAG,SAAAA,SAAAA,GAAM;EACdC,IAAAA,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACL,cAAc,CAAC,CAAA;KACzC,CAAA;EACL,CAAC,MAAM,IAAIM,gBAAgB,EAAE;EACzB,EAAA,IAAIC,QAAQ,GAAG,IAAID,gBAAgB,CAACN,cAAc,CAAC,CAAA;EACnD,EAAA,IAAIQ,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC,CAAA;EACzCH,EAAAA,QAAQ,CAAChD,OAAO,CAACiD,QAAQ,EAAE;EACvBG,IAAAA,aAAa,EAAE,IAAA;EACnB,GAAC,CAAC,CAAA;IACFT,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACdM,QAAQ,CAACI,WAAW,GAAG,CAAC,CAAA;KAC3B,CAAA;EACL,CAAC,MAAM,IAAIC,YAAY,EAAE;IACrBX,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACdW,YAAY,CAACb,cAAc,CAAC,CAAA;KAC/B,CAAA;EACL,CAAC,MAAM;IACHE,SAAS,GAAG,SAAAA,SAAAA,GAAM;MACdY,UAAU,CAACd,cAAc,CAAC,CAAA;KAC7B,CAAA;EACL,CAAA;EAEO,SAASH,QAAQA,CAACxB,EAAE,EAAE;EACzB;EACAyB,EAAAA,SAAS,CAACtJ,IAAI,CAAC6H,EAAE,CAAC,CAAC;IACnB,IAAI,CAAC0B,OAAO,EAAE;EACVG,IAAAA,SAAS,EAAE,CAAA;EACXH,IAAAA,OAAO,GAAG,IAAI,CAAA;EAClB,GAAA;EACJ;;EC7KA;;EAKA;EACO,SAASgB,SAASA,CAAC5C,EAAE,EAAE;EAC1B,EAAA,IAAM6C,IAAI,GAAG7C,EAAE,CAAC8C,QAAQ,CAAC;IACzB,IAAID,IAAI,CAACjE,IAAI,EAAE;MACXmE,QAAQ,CAAC/C,EAAE,CAAC,CAAA;EAChB,GAAA;IACA,IAAI6C,IAAI,CAACG,QAAQ,EAAE;MACfC,YAAY,CAACjD,EAAE,CAAC,CAAA;EACpB,GAAA;IACA,IAAI6C,IAAI,CAACK,KAAK,EAAE;MACZC,SAAS,CAACnD,EAAE,CAAC,CAAA;EACjB,GAAA;EACJ,CAAA;EAEA,SAASoD,KAAKA,CAACpD,EAAE,EAAE5B,MAAM,EAAEhE,GAAG,EAAE;EAC5BwC,EAAAA,MAAM,CAACiC,cAAc,CAACmB,EAAE,EAAE5F,GAAG,EAAE;MAC3BkF,GAAG,EAAA,SAAAA,MAAG;EACF,MAAA,OAAOU,EAAE,CAAC5B,MAAM,CAAC,CAAChE,GAAG,CAAC,CAAA;OACzB;MACDsF,GAAG,EAAA,SAAAA,GAACC,CAAAA,MAAM,EAAE;EACRK,MAAAA,EAAE,CAAC5B,MAAM,CAAC,CAAChE,GAAG,CAAC,GAAGuF,MAAM,CAAA;EAC5B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEO,SAASoD,QAAQA,CAAC/C,EAAE,EAAE;EACzB,EAAA,IAAIpB,IAAI,GAAGoB,EAAE,CAAC8C,QAAQ,CAAClE,IAAI,CAAC;IAC5B,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACtB,IAAI,CAAC0C,EAAE,CAAC,GAAGpB,IAAI,CAAA;IAEjDoB,EAAE,CAACqD,KAAK,GAAGzE,IAAI,CAAA;EACf;IACAQ,OAAO,CAACR,IAAI,CAAC,CAAA;EAEb,EAAA,KAAK,IAAIxE,GAAG,IAAIwE,IAAI,EAAE;EAClBwE,IAAAA,KAAK,CAACpD,EAAE,EAAE,OAAO,EAAE5F,GAAG,CAAC,CAAA;EAC3B,GAAA;EACJ,CAAA;EAEO,SAAS6I,YAAYA,CAACjD,EAAE,EAAE;EAC7B,EAAA,IAAMgD,QAAQ,GAAGhD,EAAE,CAAC8C,QAAQ,CAACE,QAAQ,CAAA;IACrC,IAAMM,QAAQ,GAAItD,EAAE,CAACuD,iBAAiB,GAAG,EAAG,CAAC;EAC7C,EAAA,KAAK,IAAInJ,GAAG,IAAI4I,QAAQ,EAAE;EACtB,IAAA,IAAIQ,OAAO,GAAGR,QAAQ,CAAC5I,GAAG,CAAC,CAAA;;EAE3B;MACA,IAAIqJ,EAAE,GAAG,OAAOD,OAAO,KAAK,UAAU,GAAGA,OAAO,GAAGA,OAAO,CAAClE,GAAG,CAAA;;EAE9D;MACAgE,QAAQ,CAAClJ,GAAG,CAAC,GAAG,IAAI2F,OAAO,CAACC,EAAE,EAAEyD,EAAE,EAAE;EAAE/C,MAAAA,IAAI,EAAE,IAAA;EAAK,KAAC,CAAC,CAAA;EAEnDgD,IAAAA,cAAc,CAAC1D,EAAE,EAAE5F,GAAG,EAAEoJ,OAAO,CAAC,CAAA;EACpC,GAAA;EACJ,CAAA;EAEO,SAASL,SAASA,CAACnD,EAAE,EAAE;EAC1B,EAAA,IAAMkD,KAAK,GAAGlD,EAAE,CAAC8C,QAAQ,CAACI,KAAK,CAAA;EAE/B,EAAA,KAAK,IAAI9I,GAAG,IAAI8I,KAAK,EAAE;EACnB,IAAA,IAAMS,OAAO,GAAGT,KAAK,CAAC9I,GAAG,CAAC,CAAC;;EAE3B,IAAA,IAAIqC,KAAK,CAACsC,OAAO,CAAC4E,OAAO,CAAC,EAAE;EACxB,MAAA,KAAK,IAAI/J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+J,OAAO,CAAChL,MAAM,EAAEiB,CAAC,EAAE,EAAE;EACrCgK,QAAAA,YAAY,CAAC5D,EAAE,EAAE5F,GAAG,EAAEuJ,OAAO,CAAC,CAAA;EAClC,OAAA;EACJ,KAAC,MAAM;EACHC,MAAAA,YAAY,CAAC5D,EAAE,EAAE5F,GAAG,EAAEuJ,OAAO,CAAC,CAAA;EAClC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,SAASC,YAAYA,CAAC5D,EAAE,EAAE5F,GAAG,EAAEuJ,OAAO,EAAE;EACpC,EAAA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;EAC7BA,IAAAA,OAAO,GAAG3D,EAAE,CAAC2D,OAAO,CAAC,CAAA;EACzB,GAAA;EAEA,EAAA,OAAO3D,EAAE,CAAC6D,MAAM,CAACzJ,GAAG,EAAEuJ,OAAO,CAAC,CAAA;EAClC,CAAA;EAEA,SAASD,cAAcA,CAACtF,MAAM,EAAEhE,GAAG,EAAEoJ,OAAO,EAAE;EAC1C;IACA,IAAMM,MAAM,GAAGN,OAAO,CAAC9D,GAAG,IAAK,YAAM,EAAG,CAAA;;EAExC;EACA9C,EAAAA,MAAM,CAACiC,cAAc,CAACT,MAAM,EAAEhE,GAAG,EAAE;EAC/BkF,IAAAA,GAAG,EAAEyE,oBAAoB,CAAC3J,GAAG,CAAC;EAC9BsF,IAAAA,GAAG,EAAEoE,MAAAA;EACT,GAAC,CAAC,CAAA;EACN,CAAA;;EAEA;EACA,SAASC,oBAAoBA,CAAC3J,GAAG,EAAE;EAC/B,EAAA,OAAO,YAAY;MACf,IAAMmE,OAAO,GAAG,IAAI,CAACgF,iBAAiB,CAACnJ,GAAG,CAAC,CAAC;MAC5C,IAAImE,OAAO,CAACoC,KAAK,EAAE;QACfpC,OAAO,CAACyC,QAAQ,EAAE,CAAC;EACvB,KAAA;;MACA,IAAIjD,GAAG,CAACK,MAAM,EAAE;EACZ;QACAG,OAAO,CAACJ,MAAM,EAAE,CAAA;EACpB,KAAA;MACA,OAAOI,OAAO,CAACnF,KAAK,CAAC;KACxB,CAAA;EACL,CAAA;;EAEO,SAAS4K,cAAcA,CAAC1H,GAAG,EAAE;EAChC;EACAA,EAAAA,GAAG,CAACI,SAAS,CAACuH,SAAS,GAAGvC,QAAQ,CAAA;IAClCpF,GAAG,CAACI,SAAS,CAACmH,MAAM,GAAG,UAAU5D,QAAQ,EAAEC,EAAE,EAAgB;EACzD,IAAA,IAAIH,OAAO,CAAC,IAAI,EAAEE,QAAQ,EAAE;EAAEW,MAAAA,IAAI,EAAE,IAAA;OAAM,EAAEV,EAAE,CAAC,CAAA;KAClD,CAAA;EACL;;ECnHA;EACO,SAASgE,kBAAkBA,CAAClE,EAAE,EAAElI,GAAG,EAA0B;EAAA,EAAA,IAAxB8G,IAAI,GAAA1B,SAAA,CAAAvE,MAAA,GAAA,CAAA,IAAAuE,SAAA,CAAA,CAAA,CAAA,KAAA2D,SAAA,GAAA3D,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IACjD,IAAG0B,IAAI,KAAK,IAAI,EAAC;MACbA,IAAI,GAAG,EAAE,CAAA;EACb,GAAA;EACA,EAAA,IAAIxE,GAAG,GAAGwE,IAAI,CAACxE,GAAG,CAAA;EAClB,EAAA,IAAIA,GAAG,EAAE;MACL,OAAOwE,IAAI,CAACxE,GAAG,CAAA;EACnB,GAAA;IAAC,KAAA6C,IAAAA,IAAA,GAAAC,SAAA,CAAAvE,MAAA,EAPqDV,QAAQ,OAAAwE,KAAA,CAAAQ,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAARnF,IAAAA,QAAQ,CAAAmF,IAAA,GAAAF,CAAAA,CAAAA,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,GAAA;IAQ9D,OAAO+G,KAAK,CAACnE,EAAE,EAAElI,GAAG,EAAEsC,GAAG,EAAEwE,IAAI,EAAE3G,QAAQ,CAAC,CAAA;EAC9C,CAAA;;EAEA;EACO,SAASmM,eAAeA,CAACpE,EAAE,EAAEzH,IAAI,EAAE;EACtC,EAAA,OAAO4L,KAAK,CAACnE,EAAE,EAAEa,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEtI,IAAI,CAAC,CAAA;EACtE,CAAA;;EAGA;EACA;EACA,SAAS4L,KAAKA,CAACnE,EAAE,EAAElI,GAAG,EAAEsC,GAAG,EAAEwE,IAAI,EAAE3G,QAAQ,EAACM,IAAI,EAAE;IAC9C,OAAO;EACHyH,IAAAA,EAAE,EAAFA,EAAE;EACFlI,IAAAA,GAAG,EAAHA,GAAG;EACHsC,IAAAA,GAAG,EAAHA,GAAG;EACHwE,IAAAA,IAAI,EAAJA,IAAI;EACJ3G,IAAAA,QAAQ,EAARA,QAAQ;EACRM,IAAAA,IAAI,EAAJA,IAAAA;EACA;KACH,CAAA;EACL,CAAA;;EAEO,SAAS8L,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAC;EACvC,EAAA,OAAOD,MAAM,CAACxM,GAAG,KAAKyM,MAAM,CAACzM,GAAG,IAAIwM,MAAM,CAAClK,GAAG,KAAKmK,MAAM,CAACnK,GAAG,CAAA;EACjE;;EChCO,SAASoK,SAASA,CAACL,KAAK,EAAE;EAC7B,EAAA,IAAMrM,GAAG,GAA2BqM,KAAK,CAAnCrM,GAAG;MAAE8G,IAAI,GAAqBuF,KAAK,CAA9BvF,IAAI;MAAE3G,QAAQ,GAAWkM,KAAK,CAAxBlM,QAAQ;MAAEM,IAAI,GAAK4L,KAAK,CAAd5L,IAAI,CAAA;EAC/B,EAAA,IAAI,OAAOT,GAAG,KAAK,QAAQ,EAAE;EACzB;MACAqM,KAAK,CAACM,EAAE,GAAGnC,QAAQ,CAACoC,aAAa,CAAC5M,GAAG,CAAC,CAAC;MACvC6M,UAAU,CAACR,KAAK,CAACM,EAAE,EAAE,EAAE,EAAE7F,IAAI,CAAC,CAAA;EAC9B3G,IAAAA,QAAQ,CAAC8B,OAAO,CAAC,UAACoB,KAAK,EAAK;QACxBgJ,KAAK,CAACM,EAAE,CAACG,WAAW,CAACJ,SAAS,CAACrJ,KAAK,CAAC,CAAC,CAAA;EAC1C,KAAC,CAAC,CAAA;EACN,GAAC,MAAM;EACHgJ,IAAAA,KAAK,CAACM,EAAE,GAAGnC,QAAQ,CAACC,cAAc,CAAClI,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,CAAC,CAAA;EAC5D,GAAA;IACA,OAAO4L,KAAK,CAACM,EAAE,CAAA;EACnB,CAAA;EAEO,SAASE,UAAUA,CAACF,EAAE,EAA6B;EAAA,EAAA,IAA3BI,QAAQ,GAAA3H,SAAA,CAAAvE,MAAA,GAAA,CAAA,IAAAuE,SAAA,CAAA,CAAA,CAAA,KAAA2D,SAAA,GAAA3D,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAAA,EAAA,IAAE4H,KAAK,GAAA5H,SAAA,CAAAvE,MAAA,GAAA,CAAA,IAAAuE,SAAA,CAAA,CAAA,CAAA,KAAA2D,SAAA,GAAA3D,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EACpD,EAAA,IAAI6H,SAAS,GAAGF,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAA;EACpC,EAAA,IAAIC,SAAS,GAAGH,KAAK,CAACE,KAAK,IAAI,EAAE,CAAA;EAEjC,EAAA,KAAK,IAAI5K,GAAG,IAAI2K,SAAS,EAAE;EAAE;EACzB,IAAA,IAAI,CAACE,SAAS,CAAC7K,GAAG,CAAC,EAAE;EACjBqK,MAAAA,EAAE,CAACO,KAAK,CAAC5K,GAAG,CAAC,GAAG,EAAE,CAAA;EACtB,KAAA;EACJ,GAAA;EAEA,EAAA,KAAK,IAAIA,IAAG,IAAIyK,QAAQ,EAAE;EAAE;EACxB,IAAA,IAAI,CAACC,KAAK,CAAC1K,IAAG,CAAC,EAAE;EAAE;EACfqK,MAAAA,EAAE,CAACS,eAAe,CAAC9K,IAAG,CAAC,CAAA;EAC3B,KAAA;EACJ,GAAA;EAEA,EAAA,KAAK,IAAIA,KAAG,IAAI0K,KAAK,EAAE;EAAE;MACrB,IAAI1K,KAAG,KAAK,OAAO,EAAE;EACjB;EACA,MAAA,KAAK,IAAI+K,SAAS,IAAIL,KAAK,CAACE,KAAK,EAAE;UAC/BP,EAAE,CAACO,KAAK,CAACG,SAAS,CAAC,GAAGL,KAAK,CAACE,KAAK,CAACG,SAAS,CAAC,CAAA;EAChD,OAAA;EACJ,KAAC,MAAM;QACHV,EAAE,CAACW,YAAY,CAAChL,KAAG,EAAE0K,KAAK,CAAC1K,KAAG,CAAC,CAAC,CAAA;EACpC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEO,SAASiL,KAAKA,CAACC,QAAQ,EAAEnB,KAAK,EAAE;EACnC;EACA,EAAA,IAAMoB,aAAa,GAAGD,QAAQ,CAACE,QAAQ,CAAA;EACvC,EAAA,IAAID,aAAa,EAAE;MACf,IAAME,GAAG,GAAGH,QAAQ,CAAC;EACrB,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAU,CAAC;EACjC,IAAA,IAAIC,MAAM,GAAGpB,SAAS,CAACL,KAAK,CAAC,CAAC;MAC9BuB,SAAS,CAACG,YAAY,CAACD,MAAM,EAAEH,GAAG,CAACK,YAAY,CAAC,CAAA;EAChDJ,IAAAA,SAAS,CAACK,WAAW,CAACN,GAAG,CAAC,CAAC;EAC3BjG,IAAAA,OAAO,CAACC,GAAG,CAACmG,MAAM,CAAC,CAAA;EACnB,IAAA,OAAOA,MAAM,CAAA;EACjB,GAAC,MAAM;EACH;EACAI,IAAAA,UAAU,CAACV,QAAQ,EAAEnB,KAAK,CAAC,CAAA;EAC/B,GAAA;EACJ,CAAA;;EAEA;EACA,SAAS6B,UAAUA,CAACV,QAAQ,EAAEnB,KAAK,EAAE;EAEjC,EAAA,IAAI,CAACE,WAAW,CAACiB,QAAQ,EAAEnB,KAAK,CAAC,EAAE;EAAE;EACjC;;EAEA,IAAA,IAAIM,GAAE,GAAGD,SAAS,CAACL,KAAK,CAAC,CAAA;EACzBmB,IAAAA,QAAQ,CAACb,EAAE,CAACkB,UAAU,CAACM,YAAY,CAACxB,GAAE,EAAEa,QAAQ,CAACb,EAAE,CAAC,CAAA;EACpD,IAAA,OAAOA,GAAE,CAAA;EACb,GAAA;;EAEA;IACA,IAAIA,EAAE,GAAGN,KAAK,CAACM,EAAE,GAAGa,QAAQ,CAACb,EAAE,CAAC;EAChC,EAAA,IAAI,CAACa,QAAQ,CAACxN,GAAG,EAAE;EACf;EACA,IAAA,IAAIwN,QAAQ,CAAC/M,IAAI,KAAK4L,KAAK,CAAC5L,IAAI,EAAE;EAC9BkM,MAAAA,EAAE,CAAChC,WAAW,GAAG0B,KAAK,CAAC5L,IAAI,CAAC;EAChC,KAAA;EACJ,GAAA;;EAEA;IACAoM,UAAU,CAACF,EAAE,EAAEa,QAAQ,CAAC1G,IAAI,EAAEuF,KAAK,CAACvF,IAAI,CAAC,CAAA;;EAEzC;;EAGA,EAAA,IAAIsH,WAAW,GAAGZ,QAAQ,CAACrN,QAAQ,IAAI,EAAE,CAAA;EACzC,EAAA,IAAIkO,WAAW,GAAGhC,KAAK,CAAClM,QAAQ,IAAI,EAAE,CAAA;IACtC,IAAGiO,WAAW,CAACvN,MAAM,GAAG,CAAC,IAAIwN,WAAW,CAACxN,MAAM,GAAG,CAAC,EAAC;EAChD;EACAyN,IAAAA,cAAc,CAAC3B,EAAE,EAAEyB,WAAW,EAAEC,WAAW,CAAC,CAAA;EAChD,GAAC,MAAM,IAAGA,WAAW,CAACxN,MAAM,GAAG,CAAC,EAAE;EAAE;EAChC0N,IAAAA,aAAa,CAAC5B,EAAE,EAAC0B,WAAW,CAAC,CAAA;EACjC,GAAC,MAAM,IAAGD,WAAW,CAACvN,MAAM,GAAG,CAAC,EAAE;EAAE;EAChC8L,IAAAA,EAAE,CAAC6B,SAAS,GAAG,EAAE,CAAC;EACtB,GAAA;;EAEA,EAAA,OAAO7B,EAAE,CAAA;EACb,CAAA;EAEA,SAAS4B,aAAaA,CAAC5B,EAAE,EAAC0B,WAAW,EAAC;EAClC,EAAA,KAAI,IAAIvM,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACuM,WAAW,CAACxN,MAAM,EAAEiB,CAAC,EAAE,EAAC;EACnC,IAAA,IAAIuB,KAAK,GAAGgL,WAAW,CAACvM,CAAC,CAAC,CAAA;EAC1B6K,IAAAA,EAAE,CAACG,WAAW,CAACJ,SAAS,CAACrJ,KAAK,CAAC,CAAC,CAAA;EACpC,GAAA;EACJ,CAAA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA,SAASiL,cAAcA,CAAClO,MAAM,EAAEqO,KAAK,EAAEC,KAAK,EAAE;EAC1C,EAAA,IAAIC,aAAa,GAAG,CAAC,CAAC;EACtB,EAAA,IAAIC,aAAa,GAAGH,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAII,WAAW,GAAGJ,KAAK,CAAC5N,MAAM,GAAG,CAAC,CAAC;EACnC,EAAA,IAAIiO,WAAW,GAAGL,KAAK,CAACI,WAAW,CAAC,CAAC;;EAErC,EAAA,IAAIE,aAAa,GAAG,CAAC,CAAC;EACtB,EAAA,IAAIC,aAAa,GAAGN,KAAK,CAAC,CAAC,CAAC,CAAA;EAC5B,EAAA,IAAIO,WAAW,GAAGP,KAAK,CAAC7N,MAAM,GAAG,CAAC,CAAA;EAClC,EAAA,IAAIqO,WAAW,GAAGR,KAAK,CAACO,WAAW,CAAC,CAAA;;EAEpC;IACA,SAASE,cAAcA,CAAChP,QAAQ,EAAE;MAChC,IAAIiD,GAAG,GAAG,EAAE,CAAA;EACZjD,IAAAA,QAAQ,CAAC8B,OAAO,CAAC,UAACC,IAAI,EAAEc,KAAK,EAAK;EAChCI,MAAAA,GAAG,CAAClB,IAAI,CAACI,GAAG,CAAC,GAAGU,KAAK,CAAA;EACvB,KAAC,CAAC,CAAA;EACF,IAAA,OAAOI,GAAG,CAAA;EACZ,GAAA;EACA;EACA,EAAA,IAAIA,GAAG,GAAG+L,cAAc,CAACV,KAAK,CAAC,CAAA;;EAE/B;EACA,EAAA,OAAOE,aAAa,IAAIE,WAAW,IAAIE,aAAa,IAAIE,WAAW,EAAE;EACnE;MACA,IAAI,CAACL,aAAa,EAAE;EAClBA,MAAAA,aAAa,GAAGH,KAAK,CAAC,EAAEE,aAAa,CAAC,CAAA;EACxC,KAAC,MAAM,IAAI,CAACG,WAAW,EAAE;EACvBA,MAAAA,WAAW,GAAGL,KAAK,CAAC,EAAEI,WAAW,CAAC,CAAA;OACnC,MAAM,IAAItC,WAAW,CAACqC,aAAa,EAAEI,aAAa,CAAC,EAAE;EACpD;EACAzB,MAAAA,KAAK,CAACqB,aAAa,EAAEI,aAAa,CAAC,CAAC;EACpCJ,MAAAA,aAAa,GAAGH,KAAK,CAAC,EAAEE,aAAa,CAAC,CAAA;EACtCK,MAAAA,aAAa,GAAGN,KAAK,CAAC,EAAEK,aAAa,CAAC,CAAA;OACvC,MAAM,IAAIxC,WAAW,CAACuC,WAAW,EAAEI,WAAW,CAAC,EAAE;EAChD;EACA3B,MAAAA,KAAK,CAACuB,WAAW,EAAEI,WAAW,CAAC,CAAA;EAC/BJ,MAAAA,WAAW,GAAGL,KAAK,CAAC,EAAEI,WAAW,CAAC,CAAA;EAClCK,MAAAA,WAAW,GAAGR,KAAK,CAAC,EAAEO,WAAW,CAAC,CAAA;OACnC,MAAM,IAAI1C,WAAW,CAACqC,aAAa,EAAEM,WAAW,CAAC,EAAE;EAClD;EACA3B,MAAAA,KAAK,CAACqB,aAAa,EAAEM,WAAW,CAAC,CAAA;EACjC9O,MAAAA,MAAM,CAAC2N,YAAY,CAACa,aAAa,CAACjC,EAAE,EAAEmC,WAAW,CAACnC,EAAE,CAACyC,WAAW,CAAC,CAAC;EAClER,MAAAA,aAAa,GAAGH,KAAK,CAAC,EAAEE,aAAa,CAAC,CAAA;EACtCO,MAAAA,WAAW,GAAGR,KAAK,CAAC,EAAEO,WAAW,CAAC,CAAA;OACnC,MAAM,IAAI1C,WAAW,CAACuC,WAAW,EAAEE,aAAa,CAAC,EAAE;EAClD;EACAzB,MAAAA,KAAK,CAACuB,WAAW,EAAEE,aAAa,CAAC,CAAA;QACjC5O,MAAM,CAAC2N,YAAY,CAACe,WAAW,CAACnC,EAAE,EAAEiC,aAAa,CAACjC,EAAE,CAAC,CAAA;EACrDmC,MAAAA,WAAW,GAAGL,KAAK,CAAC,EAAEI,WAAW,CAAC,CAAA;EAClCG,MAAAA,aAAa,GAAGN,KAAK,CAAC,EAAEK,aAAa,CAAC,CAAA;EACxC,KAAC,MAAM;EACL;EACA;EACA,MAAA,IAAIM,SAAS,GAAGjM,GAAG,CAAC4L,aAAa,CAAC1M,GAAG,CAAC,CAAA;QACtC,IAAI,CAAC+M,SAAS,EAAE;EACd;UACAjP,MAAM,CAAC2N,YAAY,CAACrB,SAAS,CAACsC,aAAa,CAAC,EAAEJ,aAAa,CAACjC,EAAE,CAAC,CAAA;EACjE,OAAC,MAAM;EACL,QAAA,IAAI2C,SAAS,GAAGb,KAAK,CAACY,SAAS,CAAC,CAAC;EACjCZ,QAAAA,KAAK,CAACY,SAAS,CAAC,GAAGtG,SAAS,CAAC;EAC7B3I,QAAAA,MAAM,CAAC2N,YAAY,CAACuB,SAAS,CAAC3C,EAAE,EAAEiC,aAAa,CAACjC,EAAE,CAAC,CAAC;EACpDY,QAAAA,KAAK,CAAC+B,SAAS,EAAEN,aAAa,CAAC,CAAA;EACjC,OAAA;EACF,KAAA;EACF,GAAA;EACA;IACA,IAAID,aAAa,IAAIE,WAAW,EAAE;MAChC,KAAK,IAAInN,CAAC,GAAGiN,aAAa,EAAEjN,CAAC,IAAImN,WAAW,EAAEnN,CAAC,EAAE,EAAE;EACjD;QACA,IAAMyN,GAAG,GACPb,KAAK,CAACO,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,GAAGP,KAAK,CAACO,WAAW,GAAG,CAAC,CAAC,CAACtC,EAAE,CAAA;EACnEvM,MAAAA,MAAM,CAAC2N,YAAY,CAACrB,SAAS,CAACgC,KAAK,CAAC5M,CAAC,CAAC,CAAC,EAAEyN,GAAG,CAAC,CAAA;EAC/C,KAAA;EACF,GAAA;EACA;IACA,IAAIZ,aAAa,IAAIE,WAAW,EAAE;MAChC,KAAK,IAAI/M,EAAC,GAAG6M,aAAa,EAAE7M,EAAC,IAAI+M,WAAW,EAAE/M,EAAC,EAAE,EAAE;EACjD,MAAA,IAAIuB,KAAK,GAAGoL,KAAK,CAAC3M,EAAC,CAAC,CAAA;QACpB,IAAIuB,KAAK,IAAI0F,SAAS,EAAE;EACtB3I,QAAAA,MAAM,CAAC6N,WAAW,CAAC5K,KAAK,CAACsJ,EAAE,CAAC,CAAA;EAC9B,OAAA;EACF,KAAA;EACF,GAAA;EACF;;EC/NF;EAKO,SAAS6C,aAAaA,CAAChL,GAAG,EAAE;EAC/B;EACAA,EAAAA,GAAG,CAACI,SAAS,CAAC6K,OAAO,GAAG,UAAUpD,KAAK,EAAE;MACrC,IAAMnE,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAMyE,EAAE,GAAGzE,EAAE,CAACwH,GAAG,CAAA;;EAEjB;;MAEAxH,EAAE,CAACwH,GAAG,GAAGnC,KAAK,CAACZ,EAAE,EAAEN,KAAK,CAAC,CAAA;KAC5B,CAAA;;EAED;EACA7H,EAAAA,GAAG,CAACI,SAAS,CAAC+K,EAAE,GAAG,YAAY;EAC3B,IAAA,OAAOvD,kBAAkB,CAAA3G,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAvG,MAAA,CAAAyF,KAAA,CAAAC,SAAA,CAAAnC,KAAA,CAAA+C,IAAA,CAAKJ,SAAS,CAAC,CAAA,CAAA,CAAA;KAChD,CAAA;;EAED;EACAZ,EAAAA,GAAG,CAACI,SAAS,CAACgL,EAAE,GAAG,YAAY;EAC3B,IAAA,OAAOtD,eAAe,CAAA7G,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAvG,MAAA,CAAAyF,KAAA,CAAAC,SAAA,CAAAnC,KAAA,CAAA+C,IAAA,CAAKJ,SAAS,CAAC,CAAA,CAAA,CAAA;KAC7C,CAAA;EACDZ,EAAAA,GAAG,CAACI,SAAS,CAACiL,EAAE,GAAG,UAAUvO,KAAK,EAAE;MAChC,IAAIA,KAAK,KAAK,QAAQ,EAAE;EACpB,MAAA,OAAOA,KAAK,CAAA;EAChB,KAAA;EACA,IAAA,OAAOiB,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC,CAAA;KAC/B,CAAA;EAEDkD,EAAAA,GAAG,CAACI,SAAS,CAACkL,OAAO,GAAG,YAAY;MAChC,IAAM5H,EAAE,GAAG,IAAI,CAAA;EACf;EACA;MACA,OAAO,IAAI,CAAC8C,QAAQ,CAACtH,MAAM,CAAC8B,IAAI,CAAC0C,EAAE,CAAC,CAAA;KAEvC,CAAA;EACL,CAAA;;EAEO,SAAS6H,cAAcA,CAAC7H,EAAE,EAAEyE,EAAE,EAAE;EACnC;IACAzE,EAAE,CAACwH,GAAG,GAAG/C,EAAE,CAAA;EACX;EACAqD,EAAAA,QAAQ,CAAC9H,EAAE,EAAE,aAAa,CAAC,CAAC;EAC5B,EAAA,IAAI+H,eAAe,GAAG,SAAlBA,eAAeA,GAAS;EAC1B/H,IAAAA,EAAE,CAACuH,OAAO,CAACvH,EAAE,CAAC4H,OAAO,EAAE,CAAC,CAAA;KACzB,CAAA;EACD,EAAA,IAAI7H,OAAO,CACTC,EAAE,EACF+H,eAAe,EACf,YAAM;EACJD,IAAAA,QAAQ,CAAC9H,EAAE,EAAE,cAAc,CAAC,CAAC;KAC9B,EACD,IAAI,CACL,CAAA;EACD8H,EAAAA,QAAQ,CAAC9H,EAAE,EAAE,SAAS,CAAC,CAAC;EACxB;EACA;EACF,CAAA;;EAEF;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEO,SAAS8H,QAAQA,CAAC9H,EAAE,EAAEjE,IAAI,EAAE;EAC/ByD,EAAAA,OAAO,CAACC,GAAG,CAAC1D,IAAI,CAAC,CAAA;EACjB,EAAA,IAAMiM,QAAQ,GAAGhI,EAAE,CAAC8C,QAAQ,CAAC/G,IAAI,CAAC,CAAA;EAClC,EAAA,IAAGiM,QAAQ,EAAC;EACRA,IAAAA,QAAQ,CAACjO,OAAO,CAAC,UAAA4J,OAAO,EAAA;EAAA,MAAA,OAAEA,OAAO,CAACrG,IAAI,CAAC0C,EAAE,CAAC,CAAA;OAAC,CAAA,CAAA;EAC/C,GAAA;EACJ;;ECxEA;EACO,SAASiI,SAASA,CAAC3L,GAAG,EAAE;EAC3B;EACAA,EAAAA,GAAG,CAACI,SAAS,CAACwL,KAAK,GAAG,UAAUjM,OAAO,EAAE;EACrC;MACA,IAAM+D,EAAE,GAAG,IAAI,CAAA;EACfA,IAAAA,EAAE,CAAC8C,QAAQ,GAAG9G,YAAY,CAAC,IAAI,CAACmM,WAAW,CAAClM,OAAO,EAACA,OAAO,CAAC,CAAE;EAC9D;EACA6L,IAAAA,QAAQ,CAAC9H,EAAE,EAAC,cAAc,CAAC,CAAA;MAC3B4C,SAAS,CAAC5C,EAAE,CAAC,CAAA;EACb8H,IAAAA,QAAQ,CAAC9H,EAAE,EAAC,SAAS,CAAC,CAAA;MAEtB,IAAI/D,OAAO,CAACwI,EAAE,EAAE;EACZzE,MAAAA,EAAE,CAACoI,MAAM,CAACnM,OAAO,CAACwI,EAAE,CAAC,CAAG;EAC5B,KAAA;KACH,CAAA;;EACDnI,EAAAA,GAAG,CAACI,SAAS,CAAC0L,MAAM,GAAG,UAAU3D,EAAE,EAAE;MACjC,IAAMzE,EAAE,GAAG,IAAI,CAAA;EACfyE,IAAAA,EAAE,GAAGnC,QAAQ,CAAC+F,aAAa,CAAC5D,EAAE,CAAC,CAAA;EAE/B,IAAA,IAAI6D,GAAG,GAAGtI,EAAE,CAAC8C,QAAQ,CAAA;EACrB,IAAA,IAAI,CAACwF,GAAG,CAAC9M,MAAM,EAAE;EAAkB;EAC/B,MAAA,IAAID,QAAQ,CAAiB;EAC7B,MAAA,IAAI,CAAC+M,GAAG,CAAC/M,QAAQ,IAAIkJ,EAAE,EAAE;EAAM;UAC3BlJ,QAAQ,GAAGkJ,EAAE,CAAC8D,SAAS,CAAA;EAC3B,OAAC,MAAM;EACH,QAAA,IAAI9D,EAAE,EAAE;EAAkB;YACtBlJ,QAAQ,GAAG+M,GAAG,CAAC/M,QAAQ,CAAA;EAC3B,SAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAIA,QAAQ,EAAE;EACV;EACA,QAAA,IAAMC,MAAM,GAAGF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;EAC1C+M,QAAAA,GAAG,CAAC9M,MAAM,GAAGA,MAAM,CAAE;EACzB,OAAA;EACJ,KAAA;;EACAqM,IAAAA,cAAc,CAAC7H,EAAE,EAACyE,EAAE,CAAC,CAAE;EACvB;;EAEA;EACA;KACH,CAAA;EACL;;EChDA;EAQA,SAASnI,GAAGA,CAACL,OAAO,EAAE;EAClB;EACA,EAAA,IAAI,CAACiM,KAAK,CAACjM,OAAO,CAAC,CAAA;EACvB,CAAA;EAEAgM,SAAS,CAAC3L,GAAG,CAAC,CAAC;EACfgL,aAAa,CAAChL,GAAG,CAAC,CAAC;EACnBD,aAAa,CAACC,GAAG,CAAC,CAAC;EACnB0H,cAAc,CAAC1H,GAAG,CAAC,CAAC;;EAEpB;;EAEA,IAAIkM,OAAO,GAAGlN,iBAAiB,CAKxB,uHAAA,CAAA,CAAA;EACP,IAAImN,GAAG,GAAG,IAAInM,GAAG,CAAC;EAAEsC,EAAAA,IAAI,EAAE;EAAEzF,IAAAA,IAAI,EAAE,IAAA;EAAK,GAAA;EAAE,CAAC,CAAC,CAAA;EAC3C,IAAIuP,SAAS,GAAGF,OAAO,CAAClL,IAAI,CAACmL,GAAG,CAAC,CAAA;EAEjC,IAAIhE,EAAE,GAAGD,SAAS,CAACkE,SAAS,CAAC,CAAA;EAC7BpG,QAAQ,CAACqG,IAAI,CAAC/D,WAAW,CAACH,EAAE,CAAC,CAAA;EAE7B,IAAImE,OAAO,GAAGtN,iBAAiB,CAO9B,+JAAA,CAAA,CAAA;EACD,IAAIuN,GAAG,GAAG,IAAIvM,GAAG,CAAC;EAAEsC,EAAAA,IAAI,EAAE;EAAEzF,IAAAA,IAAI,EAAE,SAAA;EAAU,GAAA;EAAE,CAAC,CAAC,CAAA;EAChD,IAAI2P,SAAS,GAAGF,OAAO,CAACtL,IAAI,CAACuL,GAAG,CAAC,CAAA;;EAEjC;EACA;EACA;;EAEAlG,UAAU,CAAC,YAAM;EACb0C,EAAAA,KAAK,CAACqD,SAAS,EAAEI,SAAS,CAAC,CAAA;EAC/B,CAAC,EAAE,IAAI,CAAC,CAAA;EAERtJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEiJ,SAAS,CAAC;;;;;;;;"}