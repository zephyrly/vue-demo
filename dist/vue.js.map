{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/goobalApi.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["const starts = {}\r\n\r\nconst LIFTCYCLE = [\r\n    'beforeCreate',\r\n    'created',\r\n    'mounted'\r\n]\r\nLIFTCYCLE.forEach(hook => {\r\n    starts[hook] = function (p, c) {\r\n        if (c) {\r\n            if (p) {\r\n                return p.concat(c)\r\n            } else {\r\n                return [c]\r\n            }\r\n        } else {\r\n            return p\r\n        }\r\n    }\r\n})\r\nexport function mergeOptions(parent, child) {\r\n    const options = {}\r\n    for (let key in parent) {\r\n        mergeFiled(key)\r\n    }\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeFiled(key)\r\n        }\r\n    }\r\n\r\n    function mergeFiled(key) {\r\n        // 策略模式 减少if / else\r\n        if (starts[key]) {\r\n            options[key] = starts[key](parent[key], child[key])\r\n        } else {\r\n            options[key] = child[key] || parent[key]\r\n\r\n        }\r\n    }\r\n    return options\r\n}","import { mergeOptions } from \"./utils\"\r\n\r\n\r\nexport function initGlobalApi(Vue) {\r\n    // 静态方法\r\n    // -----策略模式\r\n    Vue.options = {}\r\n    Vue.mixin = function (mixin) {\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this\r\n    }\r\n}","// 重写数组中部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ // 找到所有能修改原数组的方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reserve',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    // 重写数组方法\r\n    newArrayProto[method] = function(...args){\r\n        //push.call(arr)\r\n\r\n        const result = oldArrayProto[method].call(this,...args) // 函数调用原来的方法, 函数的劫持，切片编程(函数切面)\r\n        let inserted;\r\n        let ob = this.__ob__ // 拿到data上的设置的__ob__属性(实例)\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args; // arr.splice(0,1,3)\r\n                break\r\n            case 'splice': // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2)\r\n            default: \r\n                break\r\n        }\r\n        // console.log('inserted====>',inserted,this) // 新增insert\r\n        if(inserted){\r\n            // 对新增的内容再次进行观察\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        //\r\n        // console.log(ob)\r\n        ob.dep.notify(); // 数组变化通知对应的notify\r\n        // console.log('method',method)\r\n        return result\r\n    }\r\n})","let id = 0;\r\n\r\nclass Dep{\r\n    constructor() {\r\n        this.id = id++; // s属性的dep要收集的watcher\r\n        this.subs = []; // 收集依赖\r\n    }\r\n\r\n    depend(){\r\n        // 如果页面有两个相同属性，会重复添加dep\r\n        Dep.target.addDep(this)\r\n        // this.subs.push()\r\n        // dep 和 watch 是多对多关系，\r\n        // dep对应多个watcher 一个属性可以在多规格组件中使用\r\n        // 一个watcher对应多个dep 一个组件由多个属性组成 \r\n    }\r\n\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n\r\n    notify(){\r\n        this.subs.forEach(watcher => watcher.update()); // 告诉watcher要更新了\r\n    }\r\n}\r\nDep.target = null\r\n\r\nlet stack = []\r\nexport function pushTarget(watcher){\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\n\r\nexport function popTarget(){\r\n    stack.pop();\r\n    Dep.target = stack[stack.length -  1]\r\n}\r\n\r\nexport default Dep","// observe.js\r\nimport {newArrayProto} from './array'\r\nimport Dep from './dep'\r\nclass Observe{\r\n    constructor(data){\r\n\r\n        // 给每个对象都进行收集\r\n        this.dep = new Dep();\r\n\r\n        // Object.defineProperties只能劫持已存在的属性,($set等方案修复)\r\n        //data.__ob__ = this; // 将data的this实例挂在到data的__ob__属性上\r\n\r\n        // 实现数组的新增数据的劫持功能（see: ./array.js）,并且标识已被观测\r\n        // 防止对象循环属性 __ob__ 进入死循环,我们需要将 __ob__ 设置不可枚举\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        \r\n        if(Array.isArray(data)){\r\n            // 重写数组方法 7个变异方法 进行数组本身的修改\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data){ // 循环遍历，对象属性依次劫持\r\n        // Object.defineProperty  重新定义属性， 性能差\r\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\r\n    }\r\n \r\n    observeArray(data) { // 观测数组\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target,key,value){ //闭包\r\n    let childOb = observe(value) // 对data下的所有对象进行劫持 ，， childOb依赖收集\r\n    let dep = new Dep(); // 每个属性都有dep\r\n    Object.defineProperty(target,key,{\r\n        get(){\r\n            if(Dep.target){\r\n                dep.depend()  // 让属性收集器记住当前watcher\r\n                if(childOb){\r\n                    childOb.dep.depend();  //让数组和对象也能实现依赖收集\r\n                    if(Array.isArray(value)){\r\n                        dependArray(value)\r\n                    }\r\n                }\r\n            }\r\n            console.log('用户取值了',key)\r\n            return value\r\n        },\r\n        set(newVal){\r\n            console.log('用户设置值了')\r\n            if(newVal === value) return\r\n            observe(newVal)\r\n            value = newVal\r\n            dep.notify() // 通知watcher进行更新\r\n        }\r\n    })\r\n}\r\n\r\n// 递归收集数组下的数组依赖，进行依赖收集\r\nfunction dependArray(value){\r\n    for(let i  =0; i< value.lenght;i++){\r\n        let current = value[i]\r\n        current.__ob__&&current.__ob__.dep.depend();\r\n        if(Array.isArray(current)){\r\n            dependArray(current)\r\n        }\r\n    }\r\n}\r\n\r\nexport function observe(data){\r\n\r\n    //对这个对象进行劫持\r\n    if( typeof data !== 'object' || data === null){\r\n        return // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observe){\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要在被进行劫持()\r\n\r\n    return new Observe(data);\r\n}","// watch.js\r\nimport Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\n// 1) 当创建渲染watcher的时候，将当前渲染watcher放到Dep.target上\r\n// 2) 调用 _render() 会取值 走到get上\r\n\r\n// 观察者模式实现自动更新\r\nlet id = 0;\r\n\r\n// 不同组件有不同watcher \r\nclass Watcher{\r\n    constructor(vm,exportFn,options, cb){\r\n        this.id = id++;\r\n        this.vm = vm;\r\n        this.renderWatcher = options // 是否为渲染WATCHER\r\n        \r\n        if(typeof exportFn === 'string'){\r\n            this.getter = function(){\r\n                return vm[exportFn]\r\n            }\r\n        } else {\r\n            this.getter = exportFn;  // getter意味调用这个函数可以发生取值\r\n        }\r\n        this.deps = []; // 实现计算属性和部分清理工作\r\n        this.depsId = new Set(); // 后续实现计算属性，和部分清理工作\r\n\r\n        this.lazy = options.lazy;\r\n        this.dirty = this.lazy; // 缓存值\r\n\r\n        this.user = options.user;\r\n        this.cb = cb;\r\n        \r\n        this.value = this.lazy ? undefined : this.get();\r\n    }\r\n\r\n    addDep(dep){ // 一个组件 对应多个属性，重复不需要记录\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this)  // watcher 已经记住了dep,并且进行去重，此时dep记住了watcher\r\n        }\r\n    }\r\n\r\n    evaluate(){\r\n        this.value = this.get(); // 获取过户函数的返回值,标识为脏\r\n        this.dirty = false;\r\n    }\r\n\r\n    get() {\r\n        pushTarget(this)\r\n        // Dep.target = this; // 静态属性只有一份\r\n        let value = this.getter.call(this.vm); // 会去vm上取值 vm._update(vm._render) 取值naame,age\r\n        // Dep.target = null; // 渲染完毕后就清空\r\n        popTarget()\r\n        return value\r\n    }\r\n\r\n    depend(){\r\n        let i = this.deps.length\r\n        while(i--){\r\n            // dep.depends\r\n            this.deps[i].depend(); // 让计算属性也收集渲染watcher\r\n        }\r\n    }\r\n\r\n    update(){\r\n        if(this.lazy){\r\n            // 如果是计算属性 ,则标记值为脏数据, \r\n            this.dirty = true\r\n        } else {\r\n            queueWatcher(this);\r\n            // this.get() // 重新进行渲染\r\n        }\r\n    }\r\n\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get(); // 渲染的时候用的是最新的vm进行渲染\r\n        if(this.user){\r\n            this.cb.call(this.vm,newValue, oldValue)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet queue = []\r\nlet has = {}\r\nlet pendding = false // 防抖\r\n\r\nfunction flushSchedulerQueue(){\r\n    let flushQueue = queue.slice(0);\r\n    queue=[];\r\n    has ={};\r\n    pendding = false;\r\n    flushQueue.forEach(q => q.run()); // 刷新过程中会有新的watcher,重新进入queue\r\n}\r\nfunction queueWatcher(watcher){\r\n    let id = watcher.id;\r\n    if(!has[id]){\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 不管update执行多少次，但最终只执行一轮刷新操作\r\n\r\n        if(!pendding){\r\n            nextTick(flushSchedulerQueue,0)  // 在主栈js执行完成后，定时器执行数据更新\r\n            pendding = true;\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\n\r\nfunction flushCallbacks(){\r\n    let cbs = callbacks.slice(0)\r\n    waiting =true\r\n    callbacks = []\r\n    cbs.forEach(cb =>cb()) // 按顺序执行  \r\n}\r\n// vue中使用优雅降级方式执行nextTick,\r\n// 内部首先使用Promise （ie不兼容），MutationObserver(h5浏览器的api), ie中的setImmediate，setImmediate\r\nlet timerFunc;\r\nif(Promise){\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if(MutationObserver){\r\n    let observer = new MutationObserver(flushCallbacks)\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode,{\r\n        characterData:true\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if(setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\n\r\nexport function nextTick(cb){ // 内部，外部执行顺序\r\n    callbacks.push(cb) // 维护nextTick中的callback\r\n    if(!waiting) {\r\n        timerFunc()\r\n        waiting = true\r\n    }\r\n}\r\n\r\n// 给每个属性加上一个dep,目的收集watcher\r\n\r\n// 一个组件中，有很多属性， n个属性对应一个视图， n个dep对应一个watcher\r\n// 1个属性对应多个组件 1个dep对应多个watcher\r\n// 多对多关系\r\n\r\nexport default Watcher","// state.js\r\nimport { observe } from './observe/index'\r\nimport Dep from './observe/dep'\r\nimport Watcher, { nextTick } from './observe/watcher'\r\n\r\n//  处理new Vue中的值\r\nexport function initState(vm) {\r\n    const opts = vm.$options // 获取options\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newVal) {\r\n            vm[target][key] = newVal\r\n        },\r\n    })\r\n}\r\n\r\nexport function initData(vm) {\r\n    let data = vm.$options.data // data是函数或者对象\r\n    typeof data === 'function' ? data.call(vm) : data\r\n\r\n    vm._data = data\r\n    // 数据劫持\r\n    observe(data)\r\n\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\nexport function initComputed(vm) {\r\n    const computed = vm.$options.computed\r\n    const watchers = (vm._computedWatchers = {}) // 将计算属性watcheer保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n\r\n        // 监听计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n\r\n        // 如果直接new watcher 默认执行fn\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\n\r\nexport function initWatch(vm) {\r\n    const watch = vm.$options.watch\r\n\r\n    for (let key in watch) {\r\n        const handler = watch[key] // 支付串 数组 函数\r\n\r\n        if (Array.isArray(handler)) {\r\n            for (let i = 0; i < handler.length; i++) {\r\n                creatWatcher(vm, key, handler)\r\n            }\r\n        } else {\r\n            creatWatcher(vm, key, handler)\r\n        }\r\n    }\r\n}\r\n\r\nfunction creatWatcher(vm, key, handler) {\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler]\r\n    }\r\n\r\n    return vm.$watch(key, handler)\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n    const setter = userDef.set || (() => {})\r\n\r\n    //  通过实例拿到属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter,\r\n    })\r\n}\r\n\r\n// 计算属性不会收集依赖， 只会让自己的依赖收集依赖\r\nfunction createComputedGetter(key) {\r\n    return function () {\r\n        const watcher = this._computedWatchers[key] // 获取到对应属性watcher\r\n        if (watcher.dirty) {\r\n            watcher.evaluate() // 执行后会在计算属性中，渲染watcher后创建一个计算属性的watcher\r\n        }\r\n        if (Dep.target) {\r\n            // 如果计算属性出栈后 还要渲染watcher 需要将计算属性的watcher 去收集上一层的渲染watcher\r\n            watcher.depend()\r\n        }\r\n        return watcher.value // 返回watcher的值\r\n    }\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    // 绥中转换的都是$watch\r\n    Vue.prototype.$nextTick = nextTick\r\n    Vue.prototype.$watch = function (exportFn, cb, options = {}) {\r\n        new Watcher(this, exportFn, { user: true }, cb)\r\n    }\r\n}\r\n","// compiler\r\n\r\n//1.将template转化为ast树\r\n//2.生成render(render方法执行后，返回虚拟dom)\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 开始标签<xxx>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 结束标签</xxx>\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性\r\n\r\nconst regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// vue3采用不是正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {    // 解析一个删除一个，直到全部解析完成\r\n\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []  // 用于存放元素\r\n    let currentParent    // 指向栈中的最后一个\r\n    let root\r\n    function createASTElememt(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        let node = createASTElememt(tag, attrs)    // 创建一个ast节点\r\n        if (!root) {  // 判断是否为空树\r\n            root = node     // 如果为空，则当前的树为根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node     // currentParent为栈中的最后一个\r\n    }\r\n    function chars(text) {      // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end() {\r\n        let node = stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {    // 获取开始标签\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],   //标签名\r\n                attrs: []                // 属性\r\n            }\r\n            advance(start[0].length)\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {   // 匹配属性\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5]})\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false  // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 如果textEnd == 0 说明是开始标签或者结束标签\r\n        // 如果textEnd > 0 说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag()   // 开始标签的匹配结果\r\n            if (startTagMatch) {  // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)    // 解析到的文本\r\n            }\r\n           \r\n        }\r\n    }\r\n    return root\r\n}\r\n","import { parseHTML } from \"./parse\"\r\n\r\nfunction genProps(attrs){\r\n    let str = '' //{namee,,value}\r\n    for(let i = 0;i<attrs.length;i++) {\r\n        let attr = attrs[i]\r\n\r\n        if(attr.name === 'style'){\r\n            // color:red;bacckground:red => {color:red}\r\n            let obj = {}\r\n\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj\r\n        }\r\n\r\n        str+=`${attr.name}:${JSON.stringify(attr.value)},`  // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0,-1)}}` // a:b,c:d\r\n}\r\n\r\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;  //加了/g需要每次exec重置一下,每次匹配他会向后靠一位，导致匹配不到\r\n\r\nfunction gen(node){\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        //文本\r\n        let text = node.text\r\n        if(!defaultTagRE.exec(text)){\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = [];\r\n            let match\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)){\r\n\r\n                let index = match.index; // 匹配位置 {{name}} swfrwqe  {{abc}}\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n                }\r\n\r\n                // console.log(index,'39',tokens)\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n\r\n            return `_v(${tokens.join('+')})`\r\n        } \r\n    }\r\n}\r\n\r\nfunction genChildren(children){\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast){\r\n    let children = genChildren(ast.children)\r\n    let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs): 'null' }\r\n    ${\r\n        ast.children.length?`,${children}`:''\r\n    })`\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // 将template转换成ast树\r\n    let ast = parseHTML(template)\r\n\r\n    //生成render方法(render方法执行后返回虚拟DOM)\r\n\r\n    let code = codegen(ast);\r\n    //with(this){\r\n    //     console.log(this.a)\r\n    // }\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code)  //根据代码生成render函数\r\n\r\n    return render\r\n}\r\n","// vdom index.js\r\nexport function createElementVNode(vm, tag, data = {}, ...children) {\r\n    if(data === null){\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, data.key, data, children)\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n\r\n// 与ast的区别，ast做的语法层面的转化,描述的是语法本身（css,js,html）\r\n// vnode 描述的dom元素，可以增加一些自定义属性(js)\r\nfunction vnode(vm, tag, key, data, children,text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        // .......\r\n    }\r\n}\r\n","// lifecycle.js\r\nimport { createElementVNode, createTextVNode } from './vdom/index'\r\nimport Watcher from './observe/watcher'\r\n\r\nfunction createElm(vnode) {\r\n    let { tag, data, children, text } = vnode\r\n    if (typeof tag === 'string') {\r\n        //标签\r\n        vnode.el = document.createElement(tag) // 将真实节点与虚拟节点进行对应，后续方便修改属性\r\n        patchProps(vnode.el, data)\r\n        children.forEach((child) => {\r\n            vnode.el.appendChild(createElm(child))\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(JSON.stringify(text))\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n    for (let key in props) {\r\n        if (key === 'style') {\r\n            // style(color:'red')\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n    // 初渲染流程\r\n    const isRealElement = oldVNode.nodeType\r\n    if (isRealElement) {\r\n        const elm = oldVNode // 获取真实元素\r\n        const parentElm = elm.parentNode // 拿到父元素\r\n        let newElm = createElm(vnode) // 生成真实dom\r\n        parentElm.insertBefore(newElm, elm.nextSibiling)\r\n        parentElm.removeChild(elm) // 删除老节点\r\n        console.log(newElm)\r\n        return newElm\r\n    } else {\r\n        // diff 算法\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    // 虚拟dom转换真实dom\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm = this\r\n        const el = vm.$el\r\n\r\n        // patch 初始化，更新功能\r\n\r\n        vm.$el = patch(el, vnode)\r\n    }\r\n\r\n    // _c('div',{},...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) {\r\n        if (value !== 'object') {\r\n            return value\r\n        }\r\n        return JSON.stringify(value)\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        const vm = this\r\n        // console.log('_render')\r\n        // 让vm中的this指向vm\r\n        return this.$options.render.call(vm)\r\n        console.log('_render') // 通过ast语法转义后生成的render方法\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el\r\n    // 1.调用render方法产生虚拟节点,虚拟dom\r\n\r\n    const updateComponent = () => {\r\n        vm._update(vm._render())\r\n    }\r\n\r\n    new Watcher(vm, updateComponent, true)\r\n\r\n    // 2.根据虚拟dom产生真实dom\r\n\r\n    // 3.插入el元素中\r\n}\r\n\r\n// vue核心流程：\r\n// 1.创造了响应式数据\r\n// 2.模板转化成ast语法树\r\n// 3.将ast语法树转换成render函数\r\n// 4.后续每次进行数据跟心只需要执行render函数就行，无需执行ast语法树转化过程\r\n\r\n// render函数会产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点来创造真实dom\r\n\r\nexport function callHook(vm, hook) {\r\n    console.log(hook)\r\n    const handlers = vm.$options[hook]\r\n    if(handlers){\r\n        handlers.forEach(handler=>handler.call(vm))\r\n    }\r\n}","import { initState } from \"./state\"\r\nimport { compileToFunction } from './compiler/index'\r\nimport { callHook, mountComponent } from \"./lifecycle\"\r\nimport { mergeOptions } from \"./utils\"\r\n\r\n// 给vue增加init方法\r\nexport function initMixin(Vue) {\r\n    // 用于初始化操作\r\n    Vue.prototype._init = function (options) {\r\n        // vue中,vm.$options 就是获取用户的配置\r\n        const vm = this\r\n        vm.$options = mergeOptions(this.constructor.options,options)  // 将用户的选项挂载到实例上\r\n        // 初始化状态\r\n        callHook(vm,'beforeCreate')\r\n        initState(vm)\r\n        callHook(vm,'created')\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el)   // 实现数据挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n\r\n        let ops = vm.$options\r\n        if (!ops.render) {                 // 先查找有没有render函数\r\n            let template                 // 没有render，在看有没有template，没有template，采用外部的template\r\n            if (!ops.template && el) {     // 没有模板，但是有el\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {                 // 如果有el，则采用模板内容\r\n                    template = ops.template\r\n                }\r\n            }\r\n            // 写了temlate，就直接使用\r\n            if (template) {\r\n                // 这里我们需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render  // jsx最终编译成h('xxx',{xxx})\r\n            }\r\n        }\r\n        mountComponent(vm,el)  // 组件挂载\r\n        // console.log(ops.render)   // 最终我们获取render方法\r\n\r\n        // script 变标签引用vue.global.js   这个编译过程是浏览器运行的\r\n        // runtime 不包含模板编译，整个编译过程通过loader转义vue文件，\r\n    }\r\n}\r\n\r\n","// vue\r\nimport { initGlobalApi } from './goobalApi'\r\nimport { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\nimport { initStateMixin } from './state'\r\n\r\nfunction Vue(options) {\r\n    // options => 用户的选项\r\n    this._init(options)\r\n}\r\n\r\n\r\ninitMixin(Vue)\r\ninitLifeCycle(Vue)\r\ninitGlobalApi(Vue)\r\ninitStateMixin(Vue)\r\n\r\nexport default Vue\r\n\r\n\r\n"],"names":["starts","LIFTCYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeFiled","hasOwnProperty","initGlobalApi","Vue","mixin","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","inserted","ob","__ob__","slice","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","value","depend","target","addDep","addSub","watcher","push","update","stack","pushTarget","popTarget","pop","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","childOb","get","dependArray","console","log","set","newVal","i","lenght","current","_typeof","Watcher","vm","exportFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","has","add","evaluate","queueWatcher","run","oldValue","newValue","queue","pendding","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","handler","creatWatcher","$watch","setter","createComputedGetter","initStateMixin","$nextTick","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElememt","tag","attrs","type","children","start","node","chars","text","replace","end","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codegen","exec","tokens","lastIndex","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","createElementVNode","vnode","createTextVNode","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibiling","removeChild","initLifeCycle","_update","$el","_c","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML"],"mappings":"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"}