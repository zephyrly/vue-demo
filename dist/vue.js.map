{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/observe/watcher.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组中部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ // 找到所有能修改原数组的方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reserve',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    // 重写数组方法\r\n    newArrayProto[method] = function(...args){\r\n        //push.call(arr)\r\n\r\n        const result = oldArrayProto[method].call(this,...args) // 函数调用原来的方法, 函数的劫持，切片编程(函数切面)\r\n        let inserted;\r\n        let ob = this.__ob__ // 拿到data上的设置的__ob__属性(实例)\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args; // arr.splice(0,1,3)\r\n                break\r\n            case 'splice': // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2)\r\n            default: \r\n                break\r\n        }\r\n        console.log('inserted====>',inserted,this) // 新增insert\r\n        if(inserted){\r\n            // 对新增的内容再次进行观察\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        console.log('method',method)\r\n        return result\r\n    }\r\n})","let id = 0;\r\n\r\nclass Dep{\r\n    constructor() {\r\n        this.id = id++; // s属性的dep要收集的watcher\r\n        this.subs = []; // 收集依赖\r\n    }\r\n\r\n    depend(){\r\n        // 如果页面有两个相同属性，会重复添加dep\r\n        Dep.target.addDep(this)\r\n        // this.subs.push()\r\n        // dep 和 watch 是多对多关系，\r\n        // dep对应多个watcher 一个属性可以在多规格组件中使用\r\n        // 一个watcher对应多个dep 一个组件由多个属性组成 \r\n    }\r\n\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n\r\n    notify(){\r\n        this.subs.forEach(watcher => watcher.update()); // 告诉watcher要更新了\r\n    }\r\n}\r\nDep.target = null\r\n\r\nexport default Dep","// observe.js\r\nimport {newArrayProto} from './array'\r\nimport Dep from './dep'\r\nclass Observe{\r\n    constructor(data){\r\n        // Object.defineProperties只能劫持已存在的属性,($set等方案修复)\r\n        //data.__ob__ = this; // 将data的this实例挂在到data的__ob__属性上\r\n\r\n        // 实现数组的新增数据的劫持功能（see: ./array.js）,并且标识已被观测\r\n        // 防止对象循环属性 __ob__ 进入死循环,我们需要将 __ob__ 设置不可枚举\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        \r\n        if(Array.isArray(data)){\r\n            // 重写数组方法 7个变异方法 进行数组本身的修改\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data){ // 循环遍历，对象属性依次劫持\r\n        // Object.defineProperty  重新定义属性， 性能差\r\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\r\n    }\r\n \r\n    observeArray(data) { // 观测数组\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target,key,value){ //闭包\r\n    observe(value) // 对data下的所有对象进行劫持\r\n    let dep = new Dep(); // 每个属性都有dep\r\n    Object.defineProperty(target,key,{\r\n        get(){\r\n            if(Dep.target){\r\n                dep.depend()  // 让属性收集器记住当前watcher\r\n            }\r\n            console.log('用户取值了',key)\r\n            return value\r\n        },\r\n        set(newVal){\r\n            console.log('用户设置值了')\r\n            if(newVal === value) return\r\n            observe(newVal)\r\n            value = newVal\r\n            dep.notify() // 通知watcher进行更新\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data){\r\n\r\n    //对这个对象进行劫持\r\n    if( typeof data !== 'object' || data === null){\r\n        return // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observe){\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要在被进行劫持()\r\n\r\n    return new Observe(data);\r\n}","// state.js\r\nimport { observe } from './observe/index'\r\n\r\n\r\nexport function initState(vm){\r\n    const opts = vm.$options; // 获取options\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[target][key]\r\n        },\r\n        set(newVal){\r\n            vm[target][key] = newVal\r\n        }\r\n    })\r\n}\r\n\r\nexport function initData(vm){\r\n    let data = vm.$options.data; // data是函数或者对象\r\n    typeof data === 'function'? data.call(vm): data\r\n\r\n    vm._data = data\r\n    // 数据劫持\r\n    observe(data)\r\n\r\n    for(let key in data){\r\n        proxy(vm, '_data', key)\r\n    }\r\n}","// compiler\r\n\r\n//1.将template转化为ast树\r\n//2.生成render(render方法执行后，返回虚拟dom)\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 开始标签<xxx>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 结束标签</xxx>\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性\r\n\r\nconst regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// vue3采用不是正则\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {    // 解析一个删除一个，直到全部解析完成\r\n\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = []  // 用于存放元素\r\n    let currentParent    // 指向栈中的最后一个\r\n    let root\r\n    function createASTElememt(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        let node = createASTElememt(tag, attrs)    // 创建一个ast节点\r\n        if (!root) {  // 判断是否为空树\r\n            root = node     // 如果为空，则当前的树为根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node     // currentParent为栈中的最后一个\r\n    }\r\n    function chars(text) {      // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end() {\r\n        let node = stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {    // 获取开始标签\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],   //标签名\r\n                attrs: []                // 属性\r\n            }\r\n            advance(start[0].length)\r\n            let attr, end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {   // 匹配属性\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5]})\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false  // 不是开始标签\r\n    }\r\n    while (html) {\r\n        // 如果textEnd == 0 说明是开始标签或者结束标签\r\n        // 如果textEnd > 0 说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag()   // 开始标签的匹配结果\r\n            if (startTagMatch) {  // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)    // 解析到的文本\r\n            }\r\n           \r\n        }\r\n    }\r\n    return root\r\n}\r\n","import { parseHTML } from \"./parse\"\r\n\r\nfunction genProps(attrs){\r\n    let str = '' //{namee,,value}\r\n    for(let i = 0;i<attrs.length;i++) {\r\n        let attr = attrs[i]\r\n\r\n        if(attr.name === 'style'){\r\n            // color:red;bacckground:red => {color:red}\r\n            let obj = {}\r\n\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj\r\n        }\r\n\r\n        str+=`${attr.name}:${JSON.stringify(attr.value)},`  // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0,-1)}}` // a:b,c:d\r\n}\r\n\r\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;  //加了/g需要每次exec重置一下,每次匹配他会向后靠一位，导致匹配不到\r\n\r\nfunction gen(node){\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        //文本\r\n        console.log(node)\r\n        let text = node.text\r\n        if(!defaultTagRE.exec(text)){\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = [];\r\n            let match\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)){\r\n\r\n                let index = match.index; // 匹配位置 {{name}} swfrwqe  {{abc}}\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n                }\r\n\r\n                console.log(index,'39')\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n\r\n            return `_v(${tokens.join('+')})`\r\n        } \r\n    }\r\n}\r\n\r\nfunction genChildren(children){\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast){\r\n    let children = genChildren(ast.children)\r\n    let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs): 'null' }\r\n    ${\r\n        ast.children.length?`,${children}`:''\r\n    })`\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // 将template转换成ast树\r\n    let ast = parseHTML(template)\r\n\r\n    //生成render方法(render方法执行后返回虚拟DOM)\r\n\r\n    let code = codegen(ast);\r\n    //with(this){\r\n    //     console.log(this.a)\r\n    // }\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code)  //根据代码生成render函数\r\n\r\n    return render\r\n}\r\n","// vdom index.js\r\nexport function createElementVNode(vm, tag, data = {}, ...children) {\r\n    if(data === null){\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, data.key, data, children)\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n\r\n// 与ast的区别，ast做的语法层面的转化,描述的是语法本身（css,js,html）\r\n// vnode 描述的dom元素，可以增加一些自定义属性(js)\r\nfunction vnode(vm, tag, key, data, children,text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        // .......\r\n    }\r\n}\r\n","// watch.js\r\nimport Dep from \"./dep\";\r\n\r\n// 1) 当创建渲染watcher的时候，将当前渲染watcher放到Dep.target上\r\n// 2) 调用 _render() 会取值 走到get上\r\n\r\n// 观察者模式实现自动更新\r\nlet id = 0;\r\n\r\n// 不同组件有不同watcher \r\nclass Watcher{\r\n    constructor(vm,fn,options){\r\n        this.id = id++;\r\n        this.renderWatcher = options // 是否为渲染WATCHER\r\n        this.getter = fn;  // getter意味调用这个函数可以发生取值\r\n        this.deps = []; // 实现计算属性和部分清理工作\r\n        this.depsId = new Set(); // 后续实现计算属性，和部分清理工作\r\n        this.get();\r\n    }\r\n\r\n    addDep(dep){ // 一个组件 对应多个属性，重复不需要记录\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this)  // watcher 已经记住了dep,并且进行去重，此时dep记住了watcher\r\n        }\r\n    }\r\n\r\n    get() {\r\n        Dep.target = this; // 静态属性只有一份\r\n        this.getter(); // 会去vm上取值 vm.\r\n        Dep.target = null; // 渲染完毕后就清空\r\n    }\r\n\r\n    update(){\r\n        queueWatcher(this);\r\n        // this.get() // 重新进行渲染\r\n    }\r\n\r\n    run() {\r\n        this.get()\r\n    }\r\n\r\n}\r\n\r\nlet queue = []\r\nlet has = {}\r\nlet pendding = false // 防抖\r\n\r\nfunction flushSchedulerQueue(){\r\n    let flushQueue = queue.slice(0);\r\n    queue=[];\r\n    has ={};\r\n    pendding = false;\r\n    flushQueue.forEach(q => q.run()); // 刷新过程中会有新的watcher,重新进入queue\r\n}\r\nfunction queueWatcher(watcher){\r\n    let id = watcher.id;\r\n    if(!has[id]){\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 不管update执行多少次，但最终只执行一轮刷新操作\r\n\r\n        if(!pendding){\r\n            nextTick(flushSchedulerQueue,0)  // 在主栈js执行完成后，定时器执行数据更新\r\n            pendding = true;\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\n\r\nfunction flushCallbacks(){\r\n    let cbs = callbacks.slice(0)\r\n    waiting =true\r\n    callbacks = []\r\n    cbs.forEach(cb =>cb()) // 按顺序执行  \r\n}\r\n// vue中使用优雅降级方式执行nextTick,\r\n// 内部首先使用Promise （ie不兼容），MutationObserver(h5浏览器的api), ie中的setImmediate，setImmediate\r\nlet timerFunc;\r\nif(Promise){\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if(MutationObserver){\r\n    let observer = new MutationObserver(flushCallbacks)\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode,{\r\n        characterData:true\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if(setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\n\r\nexport function nextTick(cb){ // 内部，外部执行顺序\r\n    callbacks.push(cb) // 维护nextTick中的callback\r\n    if(!waiting) {\r\n        timerFunc()\r\n        waiting = true\r\n    }\r\n}\r\n\r\n// 给每个属性加上一个dep,目的收集watcher\r\n\r\n// 一个组件中，有很多属性， n个属性对应一个视图， n个dep对应一个watcher\r\n// 1个属性对应多个组件 1个dep对应多个watcher\r\n// 多对多关系\r\n\r\nexport default Watcher","// lifecycle.js\r\nimport { createElementVNode, createTextVNode } from './vdom/index'\r\nimport Watcher from './observe/watcher'\r\n\r\nfunction createElm(vnode) {\r\n    let { tag, data, children, text } = vnode\r\n    if (typeof tag === 'string') {\r\n        //标签\r\n        vnode.el = document.createElement(tag) // 将真实节点与虚拟节点进行对应，后续方便修改属性\r\n        patchProps(vnode.el, data)\r\n        children.forEach((child) => {\r\n            vnode.el.appendChild(createElm(child))\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n    for (let key in props) {\r\n        if (key === 'style') {\r\n            // style(color:'red')\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n    // 初渲染流程\r\n    const isRealElement = oldVNode.nodeType\r\n    if (isRealElement) {\r\n        const elm = oldVNode // 获取真实元素\r\n        const parentElm = elm.parentNode // 拿到父元素\r\n        let newElm = createElm(vnode) // 生成真实dom\r\n        parentElm.insertBefore(newElm, elm.nextSibiling)\r\n        parentElm.removeChild(elm) // 删除老节点\r\n        console.log(newElm)\r\n        return newElm\r\n    } else {\r\n        // diff 算法\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    // 虚拟dom转换真实dom\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm = this\r\n        const el = vm.$el\r\n\r\n        // patch 初始化，更新功能\r\n\r\n        vm.$el = patch(el, vnode)\r\n    }\r\n\r\n    // _c('div',{},...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) {\r\n        if (value !== 'object') {\r\n            return value\r\n        }\r\n        return JSON.stringify(value)\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        const vm = this\r\n        console.log('_render')\r\n        // 让vm中的this指向vm\r\n        return this.$options.render.call(vm)\r\n        console.log('_render') // 通过ast语法转义后生成的render方法\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el\r\n    // 1.调用render方法产生虚拟节点,虚拟dom\r\n\r\n    const updateComponent = () => {\r\n        vm._update(vm._render())\r\n    }\r\n\r\n    new Watcher(vm, updateComponent, true)\r\n\r\n    // 2.根据虚拟dom产生真实dom\r\n\r\n    // 3.插入el元素中\r\n}\r\n\r\n// vue核心流程  1)创建响应式数据  2）模板转换ast语法树\r\n// 3)将ast语法树转换成render函数 4)后续每次数据更新可以只执行render函数(无需再次执行ast转换)\r\n// render函数会去产生虚拟节点\r\n// 根据生成的虚拟节点创建真实DOM\r\n","//  initMinix\r\n// init.js\r\nimport { initState } from './state'\r\nimport { compileToFunction } from './compiler/index'\r\nimport { mountComponent } from './lifecycle'\r\n\r\n// 给Vue增加init方法\r\nexport function initMinix(Vue) {\r\n    // 给vue增加init方法\r\nVue.prototype._init = function (options) {\r\n        // 用于初始化操作\r\n        // vue $options获取用户的配置\r\n\r\n        // 我们使用 vue时 $nextTick $data $attr.....\r\n        const vm = this\r\n        vm.$options = options //将给用户的1选项挂载到实例上\r\n\r\n        //初始化状态\r\n        initState(vm)\r\n        if (options.el) {\r\n            vm.$mount(options.el) // 实现数据挂载\r\n        }\r\n    }\r\nVue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if (!ops.render) {   \r\n            // 先查找是否存在render函数\r\n            let template // 没有render查找是否存在template,没有template采用外部template\r\n            if (!ops.template && el) {\r\n                // 无模板，但存在el\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {\r\n                    template = ops.template // 如果有el, 采用模板内容\r\n                }\r\n            }\r\n\r\n            // 编译template模板\r\n            if (template && el) {\r\n                const render = compileToFunction(template)\r\n                ops.render = render // jsx最终会编译成h('xxx')\r\n            }\r\n            ops.render\r\n            console.log('ast树形结构',ops.render)\r\n\r\n            // script 标签引用vue.config.js 这个编译过程在浏览器运行\r\n            // runtime是不包含模板编译，整个编译打包时通过loader进行转义vue文件，runtime时不能使用template\r\n        }\r\n        mountComponent(vm,el); // 组件挂载\r\n    }\r\n}\r\n","// vue\r\nimport { initMinix } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\nimport { nextTick } from \"./observe/watcher\"\r\n\r\nfunction Vue(options){ // options => 用户的选项\r\n    this._init(options)\r\n}\r\n\r\nVue.prototype.$nextTick = nextTick\r\ninitMinix(Vue)\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","console","log","observeArray","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","notify","update","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dep","get","set","newVal","_typeof","initState","vm","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElememt","tag","attrs","type","children","parent","start","node","chars","text","replace","end","pop","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codegen","exec","tokens","lastIndex","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","undefined","vnode","createTextVNode","Watcher","fn","options","renderWatcher","getter","deps","depsId","Set","has","add","queueWatcher","run","queue","pendding","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibiling","removeChild","initLifeCycle","Vue","_update","$el","_c","_v","_s","_render","mountComponent","updateComponent","initMinix","_init","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}